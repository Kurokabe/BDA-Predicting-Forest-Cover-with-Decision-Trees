{"paragraphs":[{"title":"Download the dataset","text":"%sh\n# Download \nif [[ ! -d /data ]]\nthen\n    echo \"Create data folder\"\n    mkdir /data\nfi\n\ncd /data\nif [[ ! -f covtype.data.gz ]]\nthen\n    echo \"Downloading covtype.data.gz\"\n    curl --silent -O https://archive.ics.uci.edu/ml/machine-learning-databases/covtype/covtype.data.gz\nfi","user":"anonymous","dateUpdated":"2020-06-16T12:06:18+0000","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Create data folder\nDownloading covtype.data.gz\n"}]},"apps":[],"jobName":"paragraph_1592309146750_1172538563","id":"20200522-113319_918821589","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:06:18+0000","dateFinished":"2020-06-16T12:06:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:169"},{"title":"Read the dataset","text":"%spark\n// Specify path to downloaded log file\n// Note that Spark is able to read directly gzipped files\nval datasetPath = \"/data/covtype.data.gz\"\n\nval dataset = spark.read.\n option(\"inferSchema\", true).\n option(\"header\", false).\n csv(datasetPath)","user":"anonymous","dateUpdated":"2020-06-16T12:06:27+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"datasetPath: String = /data/covtype.data.gz\ndataset: org.apache.spark.sql.DataFrame = [_c0: int, _c1: int ... 53 more fields]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=0","http://172.17.0.2:4040/jobs/job?id=1"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1592309146753_1412826638","id":"20200522-113649_588854684","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:06:27+0000","dateFinished":"2020-06-16T12:06:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:170"},{"title":"Rename columns","text":"val colNames = Seq(\n \"Elevation\", \"Aspect\", \"Slope\",\n \"Horizontal_Distance_To_Hydrology\", \"Vertical_Distance_To_Hydrology\",\n \"Horizontal_Distance_To_Roadways\",\n \"Hillshade_9am\", \"Hillshade_Noon\", \"Hillshade_3pm\",\n \"Horizontal_Distance_To_Fire_Points\"\n ) ++ (\n (0 until 4).map(i => s\"Wilderness_Area_$i\")\n ) ++ (\n (0 until 40).map(i => s\"Soil_Type_$i\")\n ) ++ Seq(\"Cover_Type\")\n \nval data = dataset.toDF(colNames:_*).withColumn(\"Cover_Type\", $\"Cover_Type\".cast(\"double\"))\n\ndata.head","user":"anonymous","dateUpdated":"2020-06-16T12:06:42+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":91,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"colNames: Seq[String] = List(Elevation, Aspect, Slope, Horizontal_Distance_To_Hydrology, Vertical_Distance_To_Hydrology, Horizontal_Distance_To_Roadways, Hillshade_9am, Hillshade_Noon, Hillshade_3pm, Horizontal_Distance_To_Fire_Points, Wilderness_Area_0, Wilderness_Area_1, Wilderness_Area_2, Wilderness_Area_3, Soil_Type_0, Soil_Type_1, Soil_Type_2, Soil_Type_3, Soil_Type_4, Soil_Type_5, Soil_Type_6, Soil_Type_7, Soil_Type_8, Soil_Type_9, Soil_Type_10, Soil_Type_11, Soil_Type_12, Soil_Type_13, Soil_Type_14, Soil_Type_15, Soil_Type_16, Soil_Type_17, Soil_Type_18, Soil_Type_19, Soil_Type_20, Soil_Type_21, Soil_Type_22, Soil_Type_23, Soil_Type_24, Soil_Type_25, Soil_Type_26, Soil_Type_27, Soil_Type_28, Soil_Type_29, Soil_Type_30, Soil_Type_31, Soil_Type_32, Soil_Type_33, Soil_Type_34, Soil_..."}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=2"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1592309146753_1991703284","id":"20200522-113323_727143862","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:06:42+0000","dateFinished":"2020-06-16T12:06:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:171"},{"title":"Split the datas","text":"val Array(trainData, testData) = data.randomSplit(Array(0.9, 0.1))\ntrainData.cache()\ntestData.cache()","user":"anonymous","dateUpdated":"2020-06-16T12:06:43+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"trainData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [Elevation: int, Aspect: int ... 53 more fields]\ntestData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [Elevation: int, Aspect: int ... 53 more fields]\nres2: testData.type = [Elevation: int, Aspect: int ... 53 more fields]\n"}]},"apps":[],"jobName":"paragraph_1592309146753_-824214319","id":"20200522-113321_2092396677","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:06:43+0000","dateFinished":"2020-06-16T12:06:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:172"},{"title":"Vectorize datas","text":"import org.apache.spark.ml.feature.VectorAssembler\n\nval inputCols = trainData.columns.filter(_ != \"Cover_Type\")\nval assembler = new VectorAssembler().setInputCols(inputCols).setOutputCol(\"featureVector\")\nval assembledTrainData = assembler.transform(trainData)\n\nassembledTrainData.select(\"featureVector\").show(truncate = false)","user":"anonymous","dateUpdated":"2020-06-16T12:06:44+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------------------------------------------------------------------------------------------+\n|featureVector                                                                                       |\n+----------------------------------------------------------------------------------------------------+\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1859.0,18.0,12.0,67.0,11.0,90.0,211.0,215.0,139.0,792.0,1.0,1.0])  |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1860.0,18.0,13.0,95.0,15.0,90.0,210.0,213.0,138.0,780.0,1.0,1.0])  |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1861.0,35.0,14.0,60.0,11.0,85.0,218.0,209.0,124.0,832.0,1.0,1.0])  |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1866.0,23.0,14.0,85.0,16.0,108.0,212.0,210.0,133.0,819.0,1.0,1.0]) |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1867.0,20.0,15.0,108.0,19.0,120.0,208.0,206.0,132.0,808.0,1.0,1.0])|\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1868.0,27.0,16.0,67.0,17.0,95.0,212.0,204.0,125.0,859.0,1.0,1.0])  |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,18],[1871.0,22.0,22.0,60.0,12.0,85.0,200.0,187.0,115.0,792.0,1.0,1.0])  |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1871.0,36.0,19.0,134.0,26.0,120.0,215.0,194.0,107.0,797.0,1.0,1.0])|\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1871.0,37.0,19.0,120.0,29.0,90.0,216.0,195.0,107.0,759.0,1.0,1.0]) |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,18],[1872.0,12.0,27.0,85.0,25.0,60.0,182.0,174.0,118.0,577.0,1.0,1.0])  |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1872.0,27.0,16.0,95.0,22.0,124.0,212.0,205.0,126.0,847.0,1.0,1.0]) |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1872.0,27.0,21.0,108.0,30.0,67.0,206.0,190.0,112.0,713.0,1.0,1.0]) |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,14],[1872.0,35.0,21.0,120.0,18.0,85.0,213.0,189.0,104.0,797.0,1.0,1.0]) |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1873.0,30.0,19.0,67.0,21.0,85.0,211.0,195.0,114.0,899.0,1.0,1.0])  |\n|(54,[0,1,2,5,6,7,8,9,13,18],[1874.0,18.0,14.0,90.0,208.0,209.0,135.0,793.0,1.0,1.0])                |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1876.0,25.0,17.0,124.0,26.0,150.0,209.0,200.0,123.0,836.0,1.0,1.0])|\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1876.0,29.0,19.0,124.0,34.0,90.0,210.0,195.0,115.0,750.0,1.0,1.0]) |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1877.0,19.0,18.0,85.0,25.0,108.0,204.0,199.0,127.0,886.0,1.0,1.0]) |\n|(54,[0,1,2,3,4,5,6,7,8,9,13,15],[1877.0,28.0,22.0,127.0,35.0,85.0,205.0,185.0,107.0,706.0,1.0,1.0]) |\n|(54,[0,1,2,5,6,7,8,9,13,18],[1879.0,18.0,14.0,120.0,208.0,210.0,137.0,767.0,1.0,1.0])               |\n+----------------------------------------------------------------------------------------------------+\nonly showing top 20 rows\n\nimport org.apache.spark.ml.feature.VectorAssembler\ninputCols: Array[String] = Array(Elevation, Aspect, Slope, Horizontal_Distance_To_Hydrology, Vertical_Distance_To_Hydrology, Horizontal_Distance_To_Roadways, Hillshade_9am, Hillshade_Noon, Hillshade_3pm, Horizontal_Distance_To_Fire_Points, Wilderness_Area_0, Wilderness_Area_1, Wilderness_Area_2, Wilderness_Area_3, Soil_Type_0, Soil_Type_1, Soil_Type_2, Soil_Type_3, Soil_Type_4, Soil_Type_5, Soil_Type_6, Soil_Type_7, Soil_Type_8, Soil_Type_9, Soil_Type_10, Soil_Type_11, Soil_Type_12, Soil_Type_13, Soil_Type_14, Soil_Type_15, Soil_Type_16, Soil_Type_17, Soil_Type_18, Soil_Type_19, Soil_Type_20, Soil_Type_21, Soil_Type_22, Soil_Type_23, Soil_Type_24, Soil_Type_25, Soil_Type_26, Soil_Type_27, Soil_Type_28, Soil_Type_29, Soil_Type_30, Soil_T..."}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=3"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1592309146754_2049290235","id":"20200522-115123_930369293","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:06:44+0000","dateFinished":"2020-06-16T12:06:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:173"},{"title":"Create basic decision tree","text":"import org.apache.spark.ml.classification.RandomForestClassifier\nimport scala.util.Random\n\nval classifier = new RandomForestClassifier()\n .setSeed(Random.nextLong())\n .setLabelCol(\"Cover_Type\")\n .setFeaturesCol(\"featureVector\")\n .setPredictionCol(\"prediction\")\n \nval model = classifier.fit(assembledTrainData)\n\nprintln(model.toDebugString)","user":"anonymous","dateUpdated":"2020-06-16T12:06:53+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"RandomForestClassificationModel (uid=rfc_448c16074528) with 20 trees\n  Tree 0 (weight 1.0):\n    If (feature 52 <= 0.0)\n     If (feature 0 <= 3052.0)\n      If (feature 2 <= 19.0)\n       If (feature 36 <= 0.0)\n        If (feature 10 <= 0.0)\n         Predict: 2.0\n        Else (feature 10 > 0.0)\n         Predict: 2.0\n       Else (feature 36 > 0.0)\n        If (feature 12 <= 0.0)\n         Predict: 2.0\n        Else (feature 12 > 0.0)\n         Predict: 1.0\n      Else (feature 2 > 19.0)\n       If (feature 12 <= 0.0)\n        If (feature 10 <= 0.0)\n         Predict: 3.0\n        Else (feature 10 > 0.0)\n         Predict: 2.0\n       Else (feature 12 > 0.0)\n        If (feature 3 <= 218.0)\n         Predict: 2.0\n        Else (feature 3 > 218.0)\n         Predict: 2.0\n     Else (feature 0 > 3052.0)\n      If (feature 5 <= 918.0)\n       If (feature 3 <= 210.0)\n        If (feature 1 <= 279.0)\n         Predict: 1.0\n        Else (feature 1 > 279.0)\n         Predict: 1.0\n       Else (feature 3 > 210.0)\n        If (feature 2 <= 19.0)\n         Predict: 2.0\n        Else (feature 2 > 19.0)\n         Predict: 1.0\n      Else (feature 5 > 918.0)\n       If (feature 42 <= 0.0)\n        If (feature 45 <= 0.0)\n         Predict: 1.0\n        Else (feature 45 > 0.0)\n         Predict: 1.0\n       Else (feature 42 > 0.0)\n        If (feature 5 <= 5353.0)\n         Predict: 1.0\n        Else (feature 5 > 5353.0)\n         Predict: 2.0\n    Else (feature 52 > 0.0)\n     If (feature 12 <= 0.0)\n      Predict: 1.0\n     Else (feature 12 > 0.0)\n      If (feature 9 <= 1024.0)\n       If (feature 9 <= 932.0)\n        If (feature 9 <= 655.0)\n         Predict: 7.0\n        Else (feature 9 > 655.0)\n         Predict: 7.0\n       Else (feature 9 > 932.0)\n        Predict: 7.0\n      Else (feature 9 > 1024.0)\n       If (feature 6 <= 186.0)\n        If (feature 7 <= 190.0)\n         Predict: 7.0\n        Else (feature 7 > 190.0)\n         Predict: 1.0\n       Else (feature 6 > 186.0)\n        If (feature 0 <= 3229.0)\n         Predict: 1.0\n        Else (feature 0 > 3229.0)\n         Predict: 7.0\n  Tree 1 (weight 1.0):\n    If (feature 13 <= 0.0)\n     If (feature 25 <= 0.0)\n      If (feature 17 <= 0.0)\n       If (feature 24 <= 0.0)\n        If (feature 43 <= 0.0)\n         Predict: 2.0\n        Else (feature 43 > 0.0)\n         Predict: 2.0\n       Else (feature 24 > 0.0)\n        Predict: 2.0\n      Else (feature 17 > 0.0)\n       If (feature 5 <= 1318.0)\n        Predict: 3.0\n       Else (feature 5 > 1318.0)\n        If (feature 4 <= 123.0)\n         Predict: 3.0\n        Else (feature 4 > 123.0)\n         Predict: 2.0\n     Else (feature 25 > 0.0)\n      If (feature 0 <= 3014.0)\n       If (feature 0 <= 2689.0)\n        If (feature 3 <= 175.0)\n         Predict: 2.0\n        Else (feature 3 > 175.0)\n         Predict: 2.0\n       Else (feature 0 > 2689.0)\n        If (feature 3 <= 95.0)\n         Predict: 2.0\n        Else (feature 3 > 95.0)\n         Predict: 2.0\n      Else (feature 0 > 3014.0)\n       If (feature 2 <= 15.0)\n        If (feature 3 <= 571.0)\n         Predict: 2.0\n        Else (feature 3 > 571.0)\n         Predict: 2.0\n       Else (feature 2 > 15.0)\n        Predict: 1.0\n    Else (feature 13 > 0.0)\n     If (feature 5 <= 576.0)\n      If (feature 2 <= 16.0)\n       If (feature 0 <= 2472.0)\n        If (feature 15 <= 0.0)\n         Predict: 3.0\n        Else (feature 15 > 0.0)\n         Predict: 3.0\n       Else (feature 0 > 2472.0)\n        If (feature 19 <= 0.0)\n         Predict: 2.0\n        Else (feature 19 > 0.0)\n         Predict: 3.0\n      Else (feature 2 > 16.0)\n       If (feature 9 <= 743.0)\n        If (feature 0 <= 2472.0)\n         Predict: 3.0\n        Else (feature 0 > 2472.0)\n         Predict: 2.0\n       Else (feature 9 > 743.0)\n        If (feature 18 <= 0.0)\n         Predict: 3.0\n        Else (feature 18 > 0.0)\n         Predict: 6.0\n     Else (feature 5 > 576.0)\n      If (feature 30 <= 0.0)\n       If (feature 6 <= 215.0)\n        If (feature 4 <= 186.0)\n         Predict: 3.0\n        Else (feature 4 > 186.0)\n         Predict: 3.0\n       Else (feature 6 > 215.0)\n        If (feature 0 <= 2306.0)\n         Predict: 4.0\n        Else (feature 0 > 2306.0)\n         Predict: 3.0\n      Else (feature 30 > 0.0)\n       If (feature 6 <= 191.0)\n        If (feature 8 <= 161.0)\n         Predict: 3.0\n        Else (feature 8 > 161.0)\n         Predict: 4.0\n       Else (feature 6 > 191.0)\n        If (feature 7 <= 215.0)\n         Predict: 4.0\n        Else (feature 7 > 215.0)\n         Predict: 4.0\n  Tree 2 (weight 1.0):\n    If (feature 0 <= 3052.0)\n     If (feature 0 <= 2564.0)\n      If (feature 23 <= 0.0)\n       If (feature 13 <= 0.0)\n        If (feature 17 <= 0.0)\n         Predict: 2.0\n        Else (feature 17 > 0.0)\n         Predict: 3.0\n       Else (feature 13 > 0.0)\n        If (feature 3 <= 0.0)\n         Predict: 4.0\n        Else (feature 3 > 0.0)\n         Predict: 3.0\n      Else (feature 23 > 0.0)\n       Predict: 3.0\n     Else (feature 0 > 2564.0)\n      If (feature 12 <= 0.0)\n       If (feature 36 <= 0.0)\n        If (feature 0 <= 2959.0)\n         Predict: 2.0\n        Else (feature 0 > 2959.0)\n         Predict: 2.0\n       Else (feature 36 > 0.0)\n        Predict: 2.0\n      Else (feature 12 > 0.0)\n       If (feature 15 <= 0.0)\n        If (feature 36 <= 0.0)\n         Predict: 2.0\n        Else (feature 36 > 0.0)\n         Predict: 1.0\n       Else (feature 15 > 0.0)\n        Predict: 3.0\n    Else (feature 0 > 3052.0)\n     If (feature 0 <= 3311.0)\n      If (feature 4 <= 29.0)\n       If (feature 5 <= 5353.0)\n        If (feature 0 <= 3142.0)\n         Predict: 1.0\n        Else (feature 0 > 3142.0)\n         Predict: 1.0\n       Else (feature 5 > 5353.0)\n        If (feature 0 <= 3207.0)\n         Predict: 2.0\n        Else (feature 0 > 3207.0)\n         Predict: 1.0\n      Else (feature 4 > 29.0)\n       If (feature 3 <= 277.0)\n        If (feature 36 <= 0.0)\n         Predict: 1.0\n        Else (feature 36 > 0.0)\n         Predict: 1.0\n       Else (feature 3 > 277.0)\n        If (feature 5 <= 5353.0)\n         Predict: 1.0\n        Else (feature 5 > 5353.0)\n         Predict: 2.0\n     Else (feature 0 > 3311.0)\n      If (feature 4 <= 32.0)\n       If (feature 37 <= 0.0)\n        If (feature 45 <= 0.0)\n         Predict: 7.0\n        Else (feature 45 > 0.0)\n         Predict: 1.0\n       Else (feature 37 > 0.0)\n        If (feature 11 <= 0.0)\n         Predict: 1.0\n        Else (feature 11 > 0.0)\n         Predict: 7.0\n      Else (feature 4 > 32.0)\n       If (feature 10 <= 0.0)\n        If (feature 53 <= 0.0)\n         Predict: 1.0\n        Else (feature 53 > 0.0)\n         Predict: 7.0\n       Else (feature 10 > 0.0)\n        If (feature 9 <= 3360.0)\n         Predict: 1.0\n        Else (feature 9 > 3360.0)\n         Predict: 7.0\n  Tree 3 (weight 1.0):\n    If (feature 51 <= 0.0)\n     If (feature 9 <= 1265.0)\n      If (feature 13 <= 0.0)\n       If (feature 17 <= 0.0)\n        If (feature 26 <= 0.0)\n         Predict: 2.0\n        Else (feature 26 > 0.0)\n         Predict: 2.0\n       Else (feature 17 > 0.0)\n        If (feature 6 <= 238.0)\n         Predict: 3.0\n        Else (feature 6 > 238.0)\n         Predict: 3.0\n      Else (feature 13 > 0.0)\n       If (feature 16 <= 0.0)\n        If (feature 2 <= 22.0)\n         Predict: 3.0\n        Else (feature 2 > 22.0)\n         Predict: 3.0\n       Else (feature 16 > 0.0)\n        If (feature 0 <= 2306.0)\n         Predict: 4.0\n        Else (feature 0 > 2306.0)\n         Predict: 3.0\n     Else (feature 9 > 1265.0)\n      If (feature 35 <= 0.0)\n       If (feature 13 <= 0.0)\n        If (feature 43 <= 0.0)\n         Predict: 2.0\n        Else (feature 43 > 0.0)\n         Predict: 2.0\n       Else (feature 13 > 0.0)\n        If (feature 16 <= 0.0)\n         Predict: 3.0\n        Else (feature 16 > 0.0)\n         Predict: 4.0\n      Else (feature 35 > 0.0)\n       If (feature 9 <= 3842.0)\n        Predict: 1.0\n       Else (feature 9 > 3842.0)\n        If (feature 7 <= 226.0)\n         Predict: 1.0\n        Else (feature 7 > 226.0)\n         Predict: 2.0\n    Else (feature 51 > 0.0)\n     If (feature 5 <= 5353.0)\n      If (feature 3 <= 767.0)\n       If (feature 4 <= 56.0)\n        Predict: 1.0\n       Else (feature 4 > 56.0)\n        If (feature 0 <= 3369.0)\n         Predict: 1.0\n        Else (feature 0 > 3369.0)\n         Predict: 7.0\n      Else (feature 3 > 767.0)\n       If (feature 12 <= 0.0)\n        If (feature 0 <= 3278.0)\n         Predict: 1.0\n        Else (feature 0 > 3278.0)\n         Predict: 7.0\n       Else (feature 12 > 0.0)\n        Predict: 7.0\n     Else (feature 5 > 5353.0)\n      If (feature 0 <= 3253.0)\n       If (feature 1 <= 295.0)\n        If (feature 9 <= 655.0)\n         Predict: 2.0\n        Else (feature 9 > 655.0)\n         Predict: 2.0\n       Else (feature 1 > 295.0)\n        Predict: 1.0\n      Else (feature 0 > 3253.0)\n       Predict: 1.0\n  Tree 4 (weight 1.0):\n    If (feature 0 <= 3052.0)\n     If (feature 5 <= 1431.0)\n      If (feature 0 <= 2472.0)\n       If (feature 23 <= 0.0)\n        If (feature 27 <= 0.0)\n         Predict: 3.0\n        Else (feature 27 > 0.0)\n         Predict: 6.0\n       Else (feature 23 > 0.0)\n        If (feature 0 <= 2306.0)\n         Predict: 3.0\n        Else (feature 0 > 2306.0)\n         Predict: 6.0\n      Else (feature 0 > 2472.0)\n       If (feature 15 <= 0.0)\n        If (feature 10 <= 0.0)\n         Predict: 2.0\n        Else (feature 10 > 0.0)\n         Predict: 2.0\n       Else (feature 15 > 0.0)\n        If (feature 9 <= 1616.0)\n         Predict: 3.0\n        Else (feature 9 > 1616.0)\n         Predict: 2.0\n     Else (feature 5 > 1431.0)\n      If (feature 0 <= 2632.0)\n       If (feature 2 <= 23.0)\n        If (feature 13 <= 0.0)\n         Predict: 2.0\n        Else (feature 13 > 0.0)\n         Predict: 6.0\n       Else (feature 2 > 23.0)\n        If (feature 4 <= 76.0)\n         Predict: 3.0\n        Else (feature 4 > 76.0)\n         Predict: 3.0\n      Else (feature 0 > 2632.0)\n       If (feature 0 <= 2959.0)\n        If (feature 6 <= 222.0)\n         Predict: 2.0\n        Else (feature 6 > 222.0)\n         Predict: 2.0\n       Else (feature 0 > 2959.0)\n        If (feature 3 <= 162.0)\n         Predict: 1.0\n        Else (feature 3 > 162.0)\n         Predict: 2.0\n    Else (feature 0 > 3052.0)\n     If (feature 48 <= 0.0)\n      If (feature 45 <= 0.0)\n       If (feature 0 <= 3311.0)\n        If (feature 35 <= 0.0)\n         Predict: 1.0\n        Else (feature 35 > 0.0)\n         Predict: 1.0\n       Else (feature 0 > 3311.0)\n        If (feature 3 <= 192.0)\n         Predict: 7.0\n        Else (feature 3 > 192.0)\n         Predict: 1.0\n      Else (feature 45 > 0.0)\n       If (feature 5 <= 918.0)\n        If (feature 4 <= 123.0)\n         Predict: 2.0\n        Else (feature 4 > 123.0)\n         Predict: 2.0\n       Else (feature 5 > 918.0)\n        If (feature 6 <= 201.0)\n         Predict: 1.0\n        Else (feature 6 > 201.0)\n         Predict: 1.0\n     Else (feature 48 > 0.0)\n      If (feature 9 <= 1191.0)\n       If (feature 0 <= 3207.0)\n        If (feature 6 <= 231.0)\n         Predict: 1.0\n        Else (feature 6 > 231.0)\n         Predict: 1.0\n       Else (feature 0 > 3207.0)\n        If (feature 12 <= 0.0)\n         Predict: 1.0\n        Else (feature 12 > 0.0)\n         Predict: 7.0\n      Else (feature 9 > 1191.0)\n       If (feature 0 <= 3311.0)\n        If (feature 7 <= 213.0)\n         Predict: 1.0\n        Else (feature 7 > 213.0)\n         Predict: 1.0\n       Else (feature 0 > 3311.0)\n        If (feature 11 <= 0.0)\n         Predict: 7.0\n        Else (feature 11 > 0.0)\n         Predict: 1.0\n  Tree 5 (weight 1.0):\n    If (feature 35 <= 0.0)\n     If (feature 51 <= 0.0)\n      If (feature 7 <= 197.0)\n       If (feature 5 <= 1739.0)\n        If (feature 2 <= 27.0)\n         Predict: 2.0\n        Else (feature 2 > 27.0)\n         Predict: 3.0\n       Else (feature 5 > 1739.0)\n        If (feature 52 <= 0.0)\n         Predict: 1.0\n        Else (feature 52 > 0.0)\n         Predict: 1.0\n      Else (feature 7 > 197.0)\n       If (feature 13 <= 0.0)\n        If (feature 25 <= 0.0)\n         Predict: 2.0\n        Else (feature 25 > 0.0)\n         Predict: 2.0\n       Else (feature 13 > 0.0)\n        If (feature 3 <= 0.0)\n         Predict: 4.0\n        Else (feature 3 > 0.0)\n         Predict: 3.0\n     Else (feature 51 > 0.0)\n      If (feature 0 <= 3369.0)\n       If (feature 11 <= 0.0)\n        Predict: 1.0\n       Else (feature 11 > 0.0)\n        If (feature 9 <= 1706.0)\n         Predict: 7.0\n        Else (feature 9 > 1706.0)\n         Predict: 1.0\n      Else (feature 0 > 3369.0)\n       If (feature 11 <= 0.0)\n        If (feature 9 <= 313.0)\n         Predict: 1.0\n        Else (feature 9 > 313.0)\n         Predict: 7.0\n       Else (feature 11 > 0.0)\n        If (feature 7 <= 234.0)\n         Predict: 7.0\n        Else (feature 7 > 234.0)\n         Predict: 1.0\n    Else (feature 35 > 0.0)\n     If (feature 1 <= 74.0)\n      If (feature 3 <= 150.0)\n       If (feature 10 <= 0.0)\n        Predict: 1.0\n       Else (feature 10 > 0.0)\n        If (feature 6 <= 204.0)\n         Predict: 1.0\n        Else (feature 6 > 204.0)\n         Predict: 1.0\n      Else (feature 3 > 150.0)\n       If (feature 4 <= -16.0)\n        If (feature 2 <= 6.0)\n         Predict: 1.0\n        Else (feature 2 > 6.0)\n         Predict: 1.0\n       Else (feature 4 > -16.0)\n        If (feature 5 <= 576.0)\n         Predict: 2.0\n        Else (feature 5 > 576.0)\n         Predict: 1.0\n     Else (feature 1 > 74.0)\n      If (feature 11 <= 0.0)\n       If (feature 10 <= 0.0)\n        If (feature 1 <= 259.0)\n         Predict: 1.0\n        Else (feature 1 > 259.0)\n         Predict: 1.0\n       Else (feature 10 > 0.0)\n        If (feature 7 <= 239.0)\n         Predict: 1.0\n        Else (feature 7 > 239.0)\n         Predict: 1.0\n      Else (feature 11 > 0.0)\n       If (feature 6 <= 206.0)\n        If (feature 6 <= 165.0)\n         Predict: 1.0\n        Else (feature 6 > 165.0)\n         Predict: 1.0\n       Else (feature 6 > 206.0)\n        If (feature 8 <= 154.0)\n         Predict: 2.0\n        Else (feature 8 > 154.0)\n         Predict: 2.0\n  Tree 6 (weight 1.0):\n    If (feature 13 <= 0.0)\n     If (feature 5 <= 1739.0)\n      If (feature 11 <= 0.0)\n       If (feature 15 <= 0.0)\n        If (feature 26 <= 0.0)\n         Predict: 2.0\n        Else (feature 26 > 0.0)\n         Predict: 2.0\n       Else (feature 15 > 0.0)\n        If (feature 3 <= 120.0)\n         Predict: 3.0\n        Else (feature 3 > 120.0)\n         Predict: 3.0\n      Else (feature 11 > 0.0)\n       If (feature 0 <= 3369.0)\n        If (feature 51 <= 0.0)\n         Predict: 1.0\n        Else (feature 51 > 0.0)\n         Predict: 1.0\n       Else (feature 0 > 3369.0)\n        If (feature 48 <= 0.0)\n         Predict: 7.0\n        Else (feature 48 > 0.0)\n         Predict: 1.0\n     Else (feature 5 > 1739.0)\n      If (feature 36 <= 0.0)\n       If (feature 9 <= 4528.0)\n        If (feature 52 <= 0.0)\n         Predict: 2.0\n        Else (feature 52 > 0.0)\n         Predict: 1.0\n       Else (feature 9 > 4528.0)\n        If (feature 5 <= 3616.0)\n         Predict: 2.0\n        Else (feature 5 > 3616.0)\n         Predict: 2.0\n      Else (feature 36 > 0.0)\n       If (feature 12 <= 0.0)\n        If (feature 4 <= -1.0)\n         Predict: 1.0\n        Else (feature 4 > -1.0)\n         Predict: 1.0\n       Else (feature 12 > 0.0)\n        If (feature 1 <= 99.0)\n         Predict: 1.0\n        Else (feature 1 > 99.0)\n         Predict: 1.0\n    Else (feature 13 > 0.0)\n     If (feature 9 <= 655.0)\n      If (feature 3 <= 0.0)\n       If (feature 1 <= 218.0)\n        If (feature 17 <= 0.0)\n         Predict: 4.0\n        Else (feature 17 > 0.0)\n         Predict: 4.0\n       Else (feature 1 > 218.0)\n        If (feature 5 <= 810.0)\n         Predict: 3.0\n        Else (feature 5 > 810.0)\n         Predict: 4.0\n      Else (feature 3 > 0.0)\n       If (feature 17 <= 0.0)\n        If (feature 14 <= 0.0)\n         Predict: 3.0\n        Else (feature 14 > 0.0)\n         Predict: 3.0\n       Else (feature 17 > 0.0)\n        If (feature 4 <= 107.0)\n         Predict: 3.0\n        Else (feature 4 > 107.0)\n         Predict: 6.0\n     Else (feature 9 > 655.0)\n      If (feature 0 <= 2472.0)\n       If (feature 18 <= 0.0)\n        If (feature 6 <= 222.0)\n         Predict: 3.0\n        Else (feature 6 > 222.0)\n         Predict: 3.0\n       Else (feature 18 > 0.0)\n        If (feature 6 <= 233.0)\n         Predict: 6.0\n        Else (feature 6 > 233.0)\n         Predict: 3.0\n      Else (feature 0 > 2472.0)\n       If (feature 5 <= 1113.0)\n        If (feature 7 <= 190.0)\n         Predict: 3.0\n        Else (feature 7 > 190.0)\n         Predict: 2.0\n       Else (feature 5 > 1113.0)\n        Predict: 2.0\n  Tree 7 (weight 1.0):\n    If (feature 2 <= 22.0)\n     If (feature 0 <= 3052.0)\n      If (feature 9 <= 1440.0)\n       If (feature 13 <= 0.0)\n        If (feature 3 <= 60.0)\n         Predict: 2.0\n        Else (feature 3 > 60.0)\n         Predict: 2.0\n       Else (feature 13 > 0.0)\n        If (feature 6 <= 213.0)\n         Predict: 3.0\n        Else (feature 6 > 213.0)\n         Predict: 3.0\n      Else (feature 9 > 1440.0)\n       If (feature 4 <= 11.0)\n        If (feature 44 <= 0.0)\n         Predict: 2.0\n        Else (feature 44 > 0.0)\n         Predict: 2.0\n       Else (feature 4 > 11.0)\n        If (feature 0 <= 2564.0)\n         Predict: 2.0\n        Else (feature 0 > 2564.0)\n         Predict: 2.0\n     Else (feature 0 > 3052.0)\n      If (feature 5 <= 918.0)\n       If (feature 42 <= 0.0)\n        If (feature 37 <= 0.0)\n         Predict: 1.0\n        Else (feature 37 > 0.0)\n         Predict: 2.0\n       Else (feature 42 > 0.0)\n        If (feature 0 <= 3142.0)\n         Predict: 1.0\n        Else (feature 0 > 3142.0)\n         Predict: 2.0\n      Else (feature 5 > 918.0)\n       If (feature 52 <= 0.0)\n        If (feature 48 <= 0.0)\n         Predict: 1.0\n        Else (feature 48 > 0.0)\n         Predict: 7.0\n       Else (feature 52 > 0.0)\n        If (feature 0 <= 3369.0)\n         Predict: 1.0\n        Else (feature 0 > 3369.0)\n         Predict: 7.0\n    Else (feature 2 > 22.0)\n     If (feature 0 <= 2564.0)\n      If (feature 9 <= 655.0)\n       If (feature 1 <= 66.0)\n        If (feature 46 <= 0.0)\n         Predict: 3.0\n        Else (feature 46 > 0.0)\n         Predict: 2.0\n       Else (feature 1 > 66.0)\n        If (feature 8 <= 116.0)\n         Predict: 3.0\n        Else (feature 8 > 116.0)\n         Predict: 3.0\n      Else (feature 9 > 655.0)\n       If (feature 8 <= 67.0)\n        If (feature 12 <= 0.0)\n         Predict: 3.0\n        Else (feature 12 > 0.0)\n         Predict: 3.0\n       Else (feature 8 > 67.0)\n        If (feature 17 <= 0.0)\n         Predict: 3.0\n        Else (feature 17 > 0.0)\n         Predict: 3.0\n     Else (feature 0 > 2564.0)\n      If (feature 52 <= 0.0)\n       If (feature 10 <= 0.0)\n        If (feature 11 <= 0.0)\n         Predict: 2.0\n        Else (feature 11 > 0.0)\n         Predict: 1.0\n       Else (feature 10 > 0.0)\n        If (feature 43 <= 0.0)\n         Predict: 1.0\n        Else (feature 43 > 0.0)\n         Predict: 2.0\n      Else (feature 52 > 0.0)\n       If (feature 10 <= 0.0)\n        If (feature 1 <= 259.0)\n         Predict: 7.0\n        Else (feature 1 > 259.0)\n         Predict: 1.0\n       Else (feature 10 > 0.0)\n        If (feature 6 <= 226.0)\n         Predict: 1.0\n        Else (feature 6 > 226.0)\n         Predict: 1.0\n  Tree 8 (weight 1.0):\n    If (feature 25 <= 0.0)\n     If (feature 23 <= 0.0)\n      If (feature 52 <= 0.0)\n       If (feature 15 <= 0.0)\n        If (feature 0 <= 3052.0)\n         Predict: 2.0\n        Else (feature 0 > 3052.0)\n         Predict: 1.0\n       Else (feature 15 > 0.0)\n        If (feature 4 <= 68.0)\n         Predict: 3.0\n        Else (feature 4 > 68.0)\n         Predict: 3.0\n      Else (feature 52 > 0.0)\n       If (feature 12 <= 0.0)\n        If (feature 6 <= 234.0)\n         Predict: 1.0\n        Else (feature 6 > 234.0)\n         Predict: 1.0\n       Else (feature 12 > 0.0)\n        If (feature 1 <= 237.0)\n         Predict: 7.0\n        Else (feature 1 > 237.0)\n         Predict: 1.0\n     Else (feature 23 > 0.0)\n      If (feature 13 <= 0.0)\n       If (feature 5 <= 2270.0)\n        Predict: 2.0\n       Else (feature 5 > 2270.0)\n        If (feature 1 <= 66.0)\n         Predict: 2.0\n        Else (feature 1 > 66.0)\n         Predict: 2.0\n      Else (feature 13 > 0.0)\n       If (feature 0 <= 2472.0)\n        If (feature 0 <= 2306.0)\n         Predict: 3.0\n        Else (feature 0 > 2306.0)\n         Predict: 3.0\n       Else (feature 0 > 2472.0)\n        Predict: 2.0\n    Else (feature 25 > 0.0)\n     If (feature 5 <= 4944.0)\n      If (feature 3 <= 95.0)\n       Predict: 2.0\n      Else (feature 3 > 95.0)\n       If (feature 0 <= 2689.0)\n        If (feature 3 <= 175.0)\n         Predict: 2.0\n        Else (feature 3 > 175.0)\n         Predict: 2.0\n       Else (feature 0 > 2689.0)\n        If (feature 9 <= 5385.0)\n         Predict: 2.0\n        Else (feature 9 > 5385.0)\n         Predict: 2.0\n     Else (feature 5 > 4944.0)\n      If (feature 7 <= 233.0)\n       If (feature 9 <= 5385.0)\n        If (feature 0 <= 3014.0)\n         Predict: 2.0\n        Else (feature 0 > 3014.0)\n         Predict: 1.0\n       Else (feature 9 > 5385.0)\n        If (feature 8 <= 164.0)\n         Predict: 2.0\n        Else (feature 8 > 164.0)\n         Predict: 2.0\n      Else (feature 7 > 233.0)\n       If (feature 0 <= 2977.0)\n        Predict: 2.0\n       Else (feature 0 > 2977.0)\n        If (feature 5 <= 5353.0)\n         Predict: 2.0\n        Else (feature 5 > 5353.0)\n         Predict: 2.0\n  Tree 9 (weight 1.0):\n    If (feature 25 <= 0.0)\n     If (feature 35 <= 0.0)\n      If (feature 51 <= 0.0)\n       If (feature 9 <= 1265.0)\n        If (feature 10 <= 0.0)\n         Predict: 2.0\n        Else (feature 10 > 0.0)\n         Predict: 2.0\n       Else (feature 9 > 1265.0)\n        If (feature 42 <= 0.0)\n         Predict: 2.0\n        Else (feature 42 > 0.0)\n         Predict: 2.0\n      Else (feature 51 > 0.0)\n       If (feature 12 <= 0.0)\n        If (feature 5 <= 4525.0)\n         Predict: 1.0\n        Else (feature 5 > 4525.0)\n         Predict: 1.0\n       Else (feature 12 > 0.0)\n        If (feature 8 <= 192.0)\n         Predict: 7.0\n        Else (feature 8 > 192.0)\n         Predict: 1.0\n     Else (feature 35 > 0.0)\n      If (feature 12 <= 0.0)\n       If (feature 5 <= 1020.0)\n        If (feature 6 <= 175.0)\n         Predict: 1.0\n        Else (feature 6 > 175.0)\n         Predict: 1.0\n       Else (feature 5 > 1020.0)\n        If (feature 5 <= 4944.0)\n         Predict: 1.0\n        Else (feature 5 > 4944.0)\n         Predict: 1.0\n      Else (feature 12 > 0.0)\n       If (feature 0 <= 3186.0)\n        If (feature 8 <= 151.0)\n         Predict: 1.0\n        Else (feature 8 > 151.0)\n         Predict: 1.0\n       Else (feature 0 > 3186.0)\n        If (feature 8 <= 154.0)\n         Predict: 1.0\n        Else (feature 8 > 154.0)\n         Predict: 1.0\n    Else (feature 25 > 0.0)\n     If (feature 0 <= 3014.0)\n      If (feature 8 <= 102.0)\n       If (feature 0 <= 2689.0)\n        Predict: 2.0\n       Else (feature 0 > 2689.0)\n        If (feature 4 <= -1.0)\n         Predict: 2.0\n        Else (feature 4 > -1.0)\n         Predict: 2.0\n      Else (feature 8 > 102.0)\n       If (feature 9 <= 5385.0)\n        If (feature 1 <= 340.0)\n         Predict: 2.0\n        Else (feature 1 > 340.0)\n         Predict: 2.0\n       Else (feature 9 > 5385.0)\n        If (feature 6 <= 221.0)\n         Predict: 2.0\n        Else (feature 6 > 221.0)\n         Predict: 2.0\n     Else (feature 0 > 3014.0)\n      If (feature 8 <= 129.0)\n       If (feature 7 <= 222.0)\n        If (feature 4 <= 107.0)\n         Predict: 1.0\n        Else (feature 4 > 107.0)\n         Predict: 2.0\n       Else (feature 7 > 222.0)\n        If (feature 3 <= 571.0)\n         Predict: 1.0\n        Else (feature 3 > 571.0)\n         Predict: 2.0\n      Else (feature 8 > 129.0)\n       If (feature 2 <= 3.0)\n        If (feature 1 <= 259.0)\n         Predict: 2.0\n        Else (feature 1 > 259.0)\n         Predict: 2.0\n       Else (feature 2 > 3.0)\n        If (feature 3 <= 767.0)\n         Predict: 2.0\n        Else (feature 3 > 767.0)\n         Predict: 2.0\n  Tree 10 (weight 1.0):\n    If (feature 13 <= 0.0)\n     If (feature 52 <= 0.0)\n      If (feature 24 <= 0.0)\n       If (feature 51 <= 0.0)\n        If (feature 35 <= 0.0)\n         Predict: 2.0\n        Else (feature 35 > 0.0)\n         Predict: 1.0\n       Else (feature 51 > 0.0)\n        If (feature 0 <= 3369.0)\n         Predict: 1.0\n        Else (feature 0 > 3369.0)\n         Predict: 7.0\n      Else (feature 24 > 0.0)\n       If (feature 1 <= 141.0)\n        If (feature 5 <= 2770.0)\n         Predict: 2.0\n        Else (feature 5 > 2770.0)\n         Predict: 2.0\n       Else (feature 1 > 141.0)\n        If (feature 0 <= 2689.0)\n         Predict: 2.0\n        Else (feature 0 > 2689.0)\n         Predict: 2.0\n     Else (feature 52 > 0.0)\n      If (feature 1 <= 200.0)\n       If (feature 9 <= 2099.0)\n        If (feature 1 <= 44.0)\n         Predict: 1.0\n        Else (feature 1 > 44.0)\n         Predict: 7.0\n       Else (feature 9 > 2099.0)\n        If (feature 4 <= 148.0)\n         Predict: 1.0\n        Else (feature 4 > 148.0)\n         Predict: 7.0\n      Else (feature 1 > 200.0)\n       If (feature 3 <= 767.0)\n        Predict: 1.0\n       Else (feature 3 > 767.0)\n        If (feature 12 <= 0.0)\n         Predict: 1.0\n        Else (feature 12 > 0.0)\n         Predict: 7.0\n    Else (feature 13 > 0.0)\n     If (feature 3 <= 0.0)\n      If (feature 0 <= 2306.0)\n       If (feature 9 <= 842.0)\n        If (feature 5 <= 702.0)\n         Predict: 3.0\n        Else (feature 5 > 702.0)\n         Predict: 4.0\n       Else (feature 9 > 842.0)\n        If (feature 16 <= 0.0)\n         Predict: 4.0\n        Else (feature 16 > 0.0)\n         Predict: 4.0\n      Else (feature 0 > 2306.0)\n       If (feature 23 <= 0.0)\n        If (feature 5 <= 1318.0)\n         Predict: 4.0\n        Else (feature 5 > 1318.0)\n         Predict: 6.0\n       Else (feature 23 > 0.0)\n        Predict: 2.0\n     Else (feature 3 > 0.0)\n      If (feature 3 <= 361.0)\n       If (feature 30 <= 0.0)\n        If (feature 16 <= 0.0)\n         Predict: 3.0\n        Else (feature 16 > 0.0)\n         Predict: 3.0\n       Else (feature 30 > 0.0)\n        If (feature 5 <= 702.0)\n         Predict: 3.0\n        Else (feature 5 > 702.0)\n         Predict: 4.0\n      Else (feature 3 > 361.0)\n       If (feature 0 <= 2564.0)\n        If (feature 15 <= 0.0)\n         Predict: 3.0\n        Else (feature 15 > 0.0)\n         Predict: 3.0\n       Else (feature 0 > 2564.0)\n        If (feature 24 <= 0.0)\n         Predict: 2.0\n        Else (feature 24 > 0.0)\n         Predict: 3.0\n  Tree 11 (weight 1.0):\n    If (feature 0 <= 3052.0)\n     If (feature 0 <= 2564.0)\n      If (feature 31 <= 0.0)\n       If (feature 9 <= 2099.0)\n        If (feature 22 <= 0.0)\n         Predict: 3.0\n        Else (feature 22 > 0.0)\n         Predict: 2.0\n       Else (feature 9 > 2099.0)\n        If (feature 23 <= 0.0)\n         Predict: 2.0\n        Else (feature 23 > 0.0)\n         Predict: 2.0\n      Else (feature 31 > 0.0)\n       If (feature 7 <= 213.0)\n        Predict: 2.0\n       Else (feature 7 > 213.0)\n        If (feature 9 <= 5385.0)\n         Predict: 2.0\n        Else (feature 9 > 5385.0)\n         Predict: 5.0\n     Else (feature 0 > 2564.0)\n      If (feature 4 <= 11.0)\n       If (feature 15 <= 0.0)\n        If (feature 34 <= 0.0)\n         Predict: 2.0\n        Else (feature 34 > 0.0)\n         Predict: 1.0\n       Else (feature 15 > 0.0)\n        If (feature 9 <= 1354.0)\n         Predict: 3.0\n        Else (feature 9 > 1354.0)\n         Predict: 2.0\n      Else (feature 4 > 11.0)\n       If (feature 2 <= 16.0)\n        If (feature 10 <= 0.0)\n         Predict: 2.0\n        Else (feature 10 > 0.0)\n         Predict: 2.0\n       Else (feature 2 > 16.0)\n        If (feature 6 <= 219.0)\n         Predict: 2.0\n        Else (feature 6 > 219.0)\n         Predict: 2.0\n    Else (feature 0 > 3052.0)\n     If (feature 51 <= 0.0)\n      If (feature 0 <= 3311.0)\n       If (feature 4 <= 29.0)\n        If (feature 10 <= 0.0)\n         Predict: 1.0\n        Else (feature 10 > 0.0)\n         Predict: 1.0\n       Else (feature 4 > 29.0)\n        If (feature 3 <= 256.0)\n         Predict: 1.0\n        Else (feature 3 > 256.0)\n         Predict: 1.0\n      Else (feature 0 > 3311.0)\n       If (feature 12 <= 0.0)\n        If (feature 5 <= 1992.0)\n         Predict: 1.0\n        Else (feature 5 > 1992.0)\n         Predict: 1.0\n       Else (feature 12 > 0.0)\n        If (feature 9 <= 3015.0)\n         Predict: 1.0\n        Else (feature 9 > 3015.0)\n         Predict: 7.0\n     Else (feature 51 > 0.0)\n      If (feature 12 <= 0.0)\n       Predict: 1.0\n      Else (feature 12 > 0.0)\n       If (feature 7 <= 247.0)\n        If (feature 3 <= 192.0)\n         Predict: 7.0\n        Else (feature 3 > 192.0)\n         Predict: 7.0\n       Else (feature 7 > 247.0)\n        If (feature 4 <= -6.0)\n         Predict: 1.0\n        Else (feature 4 > -6.0)\n         Predict: 1.0\n  Tree 12 (weight 1.0):\n    If (feature 35 <= 0.0)\n     If (feature 13 <= 0.0)\n      If (feature 23 <= 0.0)\n       If (feature 0 <= 3052.0)\n        If (feature 33 <= 0.0)\n         Predict: 2.0\n        Else (feature 33 > 0.0)\n         Predict: 2.0\n       Else (feature 0 > 3052.0)\n        If (feature 51 <= 0.0)\n         Predict: 1.0\n        Else (feature 51 > 0.0)\n         Predict: 1.0\n      Else (feature 23 > 0.0)\n       Predict: 2.0\n     Else (feature 13 > 0.0)\n      If (feature 4 <= 1.0)\n       If (feature 2 <= 14.0)\n        If (feature 15 <= 0.0)\n         Predict: 4.0\n        Else (feature 15 > 0.0)\n         Predict: 3.0\n       Else (feature 2 > 14.0)\n        If (feature 16 <= 0.0)\n         Predict: 3.0\n        Else (feature 16 > 0.0)\n         Predict: 4.0\n      Else (feature 4 > 1.0)\n       If (feature 7 <= 216.0)\n        If (feature 2 <= 33.0)\n         Predict: 3.0\n        Else (feature 2 > 33.0)\n         Predict: 3.0\n       Else (feature 7 > 216.0)\n        If (feature 1 <= 237.0)\n         Predict: 3.0\n        Else (feature 1 > 237.0)\n         Predict: 3.0\n    Else (feature 35 > 0.0)\n     If (feature 5 <= 918.0)\n      If (feature 1 <= 259.0)\n       If (feature 9 <= 1191.0)\n        If (feature 0 <= 2632.0)\n         Predict: 2.0\n        Else (feature 0 > 2632.0)\n         Predict: 1.0\n       Else (feature 9 > 1191.0)\n        If (feature 10 <= 0.0)\n         Predict: 2.0\n        Else (feature 10 > 0.0)\n         Predict: 1.0\n      Else (feature 1 > 259.0)\n       If (feature 2 <= 16.0)\n        Predict: 1.0\n       Else (feature 2 > 16.0)\n        If (feature 4 <= 36.0)\n         Predict: 1.0\n        Else (feature 4 > 36.0)\n         Predict: 1.0\n     Else (feature 5 > 918.0)\n      If (feature 8 <= 164.0)\n       If (feature 6 <= 228.0)\n        If (feature 0 <= 2842.0)\n         Predict: 2.0\n        Else (feature 0 > 2842.0)\n         Predict: 1.0\n       Else (feature 6 > 228.0)\n        If (feature 8 <= 116.0)\n         Predict: 1.0\n        Else (feature 8 > 116.0)\n         Predict: 1.0\n      Else (feature 8 > 164.0)\n       Predict: 1.0\n  Tree 13 (weight 1.0):\n    If (feature 9 <= 1265.0)\n     If (feature 0 <= 2564.0)\n      If (feature 0 <= 2472.0)\n       If (feature 16 <= 0.0)\n        If (feature 12 <= 0.0)\n         Predict: 3.0\n        Else (feature 12 > 0.0)\n         Predict: 3.0\n       Else (feature 16 > 0.0)\n        Predict: 3.0\n      Else (feature 0 > 2472.0)\n       If (feature 6 <= 241.0)\n        If (feature 5 <= 918.0)\n         Predict: 2.0\n        Else (feature 5 > 918.0)\n         Predict: 3.0\n       Else (feature 6 > 241.0)\n        If (feature 4 <= 45.0)\n         Predict: 3.0\n        Else (feature 4 > 45.0)\n         Predict: 3.0\n     Else (feature 0 > 2564.0)\n      If (feature 5 <= 2270.0)\n       If (feature 1 <= 259.0)\n        If (feature 35 <= 0.0)\n         Predict: 2.0\n        Else (feature 35 > 0.0)\n         Predict: 1.0\n       Else (feature 1 > 259.0)\n        If (feature 0 <= 3098.0)\n         Predict: 2.0\n        Else (feature 0 > 3098.0)\n         Predict: 1.0\n      Else (feature 5 > 2270.0)\n       If (feature 51 <= 0.0)\n        If (feature 0 <= 3052.0)\n         Predict: 2.0\n        Else (feature 0 > 3052.0)\n         Predict: 1.0\n       Else (feature 51 > 0.0)\n        If (feature 1 <= 130.0)\n         Predict: 1.0\n        Else (feature 1 > 130.0)\n         Predict: 1.0\n    Else (feature 9 > 1265.0)\n     If (feature 52 <= 0.0)\n      If (feature 36 <= 0.0)\n       If (feature 13 <= 0.0)\n        If (feature 35 <= 0.0)\n         Predict: 2.0\n        Else (feature 35 > 0.0)\n         Predict: 1.0\n       Else (feature 13 > 0.0)\n        If (feature 7 <= 190.0)\n         Predict: 3.0\n        Else (feature 7 > 190.0)\n         Predict: 3.0\n      Else (feature 36 > 0.0)\n       If (feature 5 <= 5353.0)\n        If (feature 11 <= 0.0)\n         Predict: 1.0\n        Else (feature 11 > 0.0)\n         Predict: 1.0\n       Else (feature 5 > 5353.0)\n        If (feature 4 <= 0.0)\n         Predict: 1.0\n        Else (feature 4 > 0.0)\n         Predict: 2.0\n     Else (feature 52 > 0.0)\n      If (feature 1 <= 183.0)\n       If (feature 8 <= 112.0)\n        If (feature 3 <= 150.0)\n         Predict: 7.0\n        Else (feature 3 > 150.0)\n         Predict: 1.0\n       Else (feature 8 > 112.0)\n        If (feature 5 <= 2140.0)\n         Predict: 1.0\n        Else (feature 5 > 2140.0)\n         Predict: 7.0\n      Else (feature 1 > 183.0)\n       If (feature 5 <= 1431.0)\n        If (feature 4 <= 107.0)\n         Predict: 1.0\n        Else (feature 4 > 107.0)\n         Predict: 7.0\n       Else (feature 5 > 1431.0)\n        If (feature 5 <= 4525.0)\n         Predict: 1.0\n        Else (feature 5 > 4525.0)\n         Predict: 7.0\n  Tree 14 (weight 1.0):\n    If (feature 15 <= 0.0)\n     If (feature 51 <= 0.0)\n      If (feature 13 <= 0.0)\n       If (feature 9 <= 4528.0)\n        If (feature 35 <= 0.0)\n         Predict: 2.0\n        Else (feature 35 > 0.0)\n         Predict: 1.0\n       Else (feature 9 > 4528.0)\n        If (feature 0 <= 3052.0)\n         Predict: 2.0\n        Else (feature 0 > 3052.0)\n         Predict: 1.0\n      Else (feature 13 > 0.0)\n       If (feature 6 <= 226.0)\n        If (feature 4 <= 123.0)\n         Predict: 3.0\n        Else (feature 4 > 123.0)\n         Predict: 3.0\n       Else (feature 6 > 226.0)\n        If (feature 9 <= 1191.0)\n         Predict: 3.0\n        Else (feature 9 > 1191.0)\n         Predict: 6.0\n     Else (feature 51 > 0.0)\n      If (feature 3 <= 767.0)\n       If (feature 8 <= 172.0)\n        Predict: 1.0\n       Else (feature 8 > 172.0)\n        If (feature 4 <= 94.0)\n         Predict: 7.0\n        Else (feature 4 > 94.0)\n         Predict: 1.0\n      Else (feature 3 > 767.0)\n       If (feature 7 <= 233.0)\n        If (feature 7 <= 216.0)\n         Predict: 7.0\n        Else (feature 7 > 216.0)\n         Predict: 7.0\n       Else (feature 7 > 233.0)\n        Predict: 7.0\n    Else (feature 15 > 0.0)\n     If (feature 12 <= 0.0)\n      Predict: 3.0\n     Else (feature 12 > 0.0)\n      If (feature 5 <= 2270.0)\n       Predict: 3.0\n      Else (feature 5 > 2270.0)\n       If (feature 6 <= 211.0)\n        If (feature 7 <= 251.0)\n         Predict: 3.0\n        Else (feature 7 > 251.0)\n         Predict: 2.0\n       Else (feature 6 > 211.0)\n        If (feature 9 <= 1354.0)\n         Predict: 3.0\n        Else (feature 9 > 1354.0)\n         Predict: 2.0\n  Tree 15 (weight 1.0):\n    If (feature 5 <= 1530.0)\n     If (feature 0 <= 2472.0)\n      If (feature 13 <= 0.0)\n       If (feature 5 <= 810.0)\n        If (feature 27 <= 0.0)\n         Predict: 3.0\n        Else (feature 27 > 0.0)\n         Predict: 6.0\n       Else (feature 5 > 810.0)\n        If (feature 23 <= 0.0)\n         Predict: 3.0\n        Else (feature 23 > 0.0)\n         Predict: 6.0\n      Else (feature 13 > 0.0)\n       If (feature 5 <= 446.0)\n        If (feature 7 <= 205.0)\n         Predict: 3.0\n        Else (feature 7 > 205.0)\n         Predict: 3.0\n       Else (feature 5 > 446.0)\n        If (feature 4 <= 1.0)\n         Predict: 3.0\n        Else (feature 4 > 1.0)\n         Predict: 3.0\n     Else (feature 0 > 2472.0)\n      If (feature 11 <= 0.0)\n       If (feature 15 <= 0.0)\n        If (feature 24 <= 0.0)\n         Predict: 2.0\n        Else (feature 24 > 0.0)\n         Predict: 2.0\n       Else (feature 15 > 0.0)\n        If (feature 5 <= 1211.0)\n         Predict: 3.0\n        Else (feature 5 > 1211.0)\n         Predict: 3.0\n      Else (feature 11 > 0.0)\n       If (feature 9 <= 2527.0)\n        If (feature 46 <= 0.0)\n         Predict: 1.0\n        Else (feature 46 > 0.0)\n         Predict: 1.0\n       Else (feature 9 > 2527.0)\n        If (feature 1 <= 119.0)\n         Predict: 1.0\n        Else (feature 1 > 119.0)\n         Predict: 2.0\n    Else (feature 5 > 1530.0)\n     If (feature 51 <= 0.0)\n      If (feature 36 <= 0.0)\n       If (feature 52 <= 0.0)\n        If (feature 1 <= 82.0)\n         Predict: 2.0\n        Else (feature 1 > 82.0)\n         Predict: 2.0\n       Else (feature 52 > 0.0)\n        If (feature 10 <= 0.0)\n         Predict: 7.0\n        Else (feature 10 > 0.0)\n         Predict: 1.0\n      Else (feature 36 > 0.0)\n       If (feature 3 <= 175.0)\n        If (feature 9 <= 932.0)\n         Predict: 1.0\n        Else (feature 9 > 932.0)\n         Predict: 1.0\n       Else (feature 3 > 175.0)\n        If (feature 0 <= 3033.0)\n         Predict: 2.0\n        Else (feature 0 > 3033.0)\n         Predict: 1.0\n     Else (feature 51 > 0.0)\n      Predict: 1.0\n  Tree 16 (weight 1.0):\n    If (feature 15 <= 0.0)\n     If (feature 23 <= 0.0)\n      If (feature 25 <= 0.0)\n       If (feature 35 <= 0.0)\n        If (feature 53 <= 0.0)\n         Predict: 2.0\n        Else (feature 53 > 0.0)\n         Predict: 1.0\n       Else (feature 35 > 0.0)\n        If (feature 0 <= 3207.0)\n         Predict: 1.0\n        Else (feature 0 > 3207.0)\n         Predict: 1.0\n      Else (feature 25 > 0.0)\n       Predict: 2.0\n     Else (feature 23 > 0.0)\n      If (feature 5 <= 1630.0)\n       If (feature 6 <= 165.0)\n        If (feature 4 <= 107.0)\n         Predict: 3.0\n        Else (feature 4 > 107.0)\n         Predict: 3.0\n       Else (feature 6 > 165.0)\n        If (feature 7 <= 190.0)\n         Predict: 3.0\n        Else (feature 7 > 190.0)\n         Predict: 2.0\n      Else (feature 5 > 1630.0)\n       If (feature 9 <= 2418.0)\n        If (feature 0 <= 2632.0)\n         Predict: 6.0\n        Else (feature 0 > 2632.0)\n         Predict: 2.0\n       Else (feature 9 > 2418.0)\n        If (feature 4 <= 76.0)\n         Predict: 1.0\n        Else (feature 4 > 76.0)\n         Predict: 6.0\n    Else (feature 15 > 0.0)\n     Predict: 3.0\n  Tree 17 (weight 1.0):\n    If (feature 23 <= 0.0)\n     If (feature 17 <= 0.0)\n      If (feature 13 <= 0.0)\n       If (feature 25 <= 0.0)\n        If (feature 26 <= 0.0)\n         Predict: 2.0\n        Else (feature 26 > 0.0)\n         Predict: 2.0\n       Else (feature 25 > 0.0)\n        If (feature 1 <= 36.0)\n         Predict: 2.0\n        Else (feature 1 > 36.0)\n         Predict: 2.0\n      Else (feature 13 > 0.0)\n       If (feature 2 <= 18.0)\n        If (feature 3 <= 0.0)\n         Predict: 4.0\n        Else (feature 3 > 0.0)\n         Predict: 3.0\n       Else (feature 2 > 18.0)\n        If (feature 1 <= 29.0)\n         Predict: 6.0\n        Else (feature 1 > 29.0)\n         Predict: 3.0\n     Else (feature 17 > 0.0)\n      If (feature 0 <= 2689.0)\n       If (feature 0 <= 2632.0)\n        If (feature 1 <= 74.0)\n         Predict: 3.0\n        Else (feature 1 > 74.0)\n         Predict: 3.0\n       Else (feature 0 > 2632.0)\n        If (feature 3 <= 120.0)\n         Predict: 2.0\n        Else (feature 3 > 120.0)\n         Predict: 3.0\n      Else (feature 0 > 2689.0)\n       If (feature 4 <= 50.0)\n        Predict: 2.0\n       Else (feature 4 > 50.0)\n        If (feature 0 <= 2732.0)\n         Predict: 3.0\n        Else (feature 0 > 2732.0)\n         Predict: 2.0\n    Else (feature 23 > 0.0)\n     If (feature 0 <= 2472.0)\n      If (feature 4 <= 107.0)\n       If (feature 2 <= 24.0)\n        If (feature 2 <= 11.0)\n         Predict: 6.0\n        Else (feature 2 > 11.0)\n         Predict: 6.0\n       Else (feature 2 > 24.0)\n        Predict: 3.0\n      Else (feature 4 > 107.0)\n       If (feature 3 <= 218.0)\n        If (feature 12 <= 0.0)\n         Predict: 3.0\n        Else (feature 12 > 0.0)\n         Predict: 6.0\n       Else (feature 3 > 218.0)\n        If (feature 0 <= 2306.0)\n         Predict: 3.0\n        Else (feature 0 > 2306.0)\n         Predict: 3.0\n     Else (feature 0 > 2472.0)\n      If (feature 3 <= 256.0)\n       If (feature 6 <= 233.0)\n        If (feature 7 <= 234.0)\n         Predict: 2.0\n        Else (feature 7 > 234.0)\n         Predict: 2.0\n       Else (feature 6 > 233.0)\n        If (feature 0 <= 2689.0)\n         Predict: 2.0\n        Else (feature 0 > 2689.0)\n         Predict: 2.0\n      Else (feature 3 > 256.0)\n       If (feature 9 <= 2418.0)\n        If (feature 2 <= 25.0)\n         Predict: 2.0\n        Else (feature 2 > 25.0)\n         Predict: 2.0\n       Else (feature 9 > 2418.0)\n        If (feature 3 <= 361.0)\n         Predict: 2.0\n        Else (feature 3 > 361.0)\n         Predict: 1.0\n  Tree 18 (weight 1.0):\n    If (feature 16 <= 0.0)\n     If (feature 51 <= 0.0)\n      If (feature 13 <= 0.0)\n       If (feature 17 <= 0.0)\n        If (feature 12 <= 0.0)\n         Predict: 2.0\n        Else (feature 12 > 0.0)\n         Predict: 2.0\n       Else (feature 17 > 0.0)\n        If (feature 1 <= 168.0)\n         Predict: 3.0\n        Else (feature 1 > 168.0)\n         Predict: 3.0\n      Else (feature 13 > 0.0)\n       If (feature 3 <= 0.0)\n        If (feature 7 <= 215.0)\n         Predict: 4.0\n        Else (feature 7 > 215.0)\n         Predict: 4.0\n       Else (feature 3 > 0.0)\n        If (feature 9 <= 655.0)\n         Predict: 3.0\n        Else (feature 9 > 655.0)\n         Predict: 3.0\n     Else (feature 51 > 0.0)\n      If (feature 2 <= 17.0)\n       If (feature 12 <= 0.0)\n        If (feature 6 <= 224.0)\n         Predict: 1.0\n        Else (feature 6 > 224.0)\n         Predict: 1.0\n       Else (feature 12 > 0.0)\n        If (feature 3 <= 767.0)\n         Predict: 7.0\n        Else (feature 3 > 767.0)\n         Predict: 7.0\n      Else (feature 2 > 17.0)\n       If (feature 9 <= 3015.0)\n        If (feature 4 <= 186.0)\n         Predict: 1.0\n        Else (feature 4 > 186.0)\n         Predict: 7.0\n       Else (feature 9 > 3015.0)\n        If (feature 11 <= 0.0)\n         Predict: 7.0\n        Else (feature 11 > 0.0)\n         Predict: 2.0\n    Else (feature 16 > 0.0)\n     If (feature 12 <= 0.0)\n      If (feature 1 <= 141.0)\n       Predict: 3.0\n      Else (feature 1 > 141.0)\n       Predict: 3.0\n     Else (feature 12 > 0.0)\n      If (feature 9 <= 451.0)\n       Predict: 6.0\n      Else (feature 9 > 451.0)\n       If (feature 7 <= 231.0)\n        If (feature 9 <= 1354.0)\n         Predict: 3.0\n        Else (feature 9 > 1354.0)\n         Predict: 2.0\n       Else (feature 7 > 231.0)\n        If (feature 4 <= -1.0)\n         Predict: 2.0\n        Else (feature 4 > -1.0)\n         Predict: 2.0\n  Tree 19 (weight 1.0):\n    If (feature 5 <= 1431.0)\n     If (feature 10 <= 0.0)\n      If (feature 12 <= 0.0)\n       If (feature 11 <= 0.0)\n        If (feature 16 <= 0.0)\n         Predict: 3.0\n        Else (feature 16 > 0.0)\n         Predict: 3.0\n       Else (feature 11 > 0.0)\n        If (feature 9 <= 2648.0)\n         Predict: 1.0\n        Else (feature 9 > 2648.0)\n         Predict: 2.0\n      Else (feature 12 > 0.0)\n       If (feature 46 <= 0.0)\n        If (feature 2 <= 20.0)\n         Predict: 2.0\n        Else (feature 2 > 20.0)\n         Predict: 2.0\n       Else (feature 46 > 0.0)\n        If (feature 0 <= 2842.0)\n         Predict: 2.0\n        Else (feature 0 > 2842.0)\n         Predict: 2.0\n     Else (feature 10 > 0.0)\n      If (feature 2 <= 18.0)\n       If (feature 25 <= 0.0)\n        If (feature 31 <= 0.0)\n         Predict: 2.0\n        Else (feature 31 > 0.0)\n         Predict: 2.0\n       Else (feature 25 > 0.0)\n        If (feature 2 <= 8.0)\n         Predict: 2.0\n        Else (feature 2 > 8.0)\n         Predict: 2.0\n      Else (feature 2 > 18.0)\n       If (feature 29 <= 0.0)\n        If (feature 5 <= 446.0)\n         Predict: 2.0\n        Else (feature 5 > 446.0)\n         Predict: 1.0\n       Else (feature 29 > 0.0)\n        Predict: 2.0\n    Else (feature 5 > 1431.0)\n     If (feature 0 <= 3052.0)\n      If (feature 25 <= 0.0)\n       If (feature 36 <= 0.0)\n        If (feature 17 <= 0.0)\n         Predict: 2.0\n        Else (feature 17 > 0.0)\n         Predict: 3.0\n       Else (feature 36 > 0.0)\n        If (feature 3 <= 218.0)\n         Predict: 1.0\n        Else (feature 3 > 218.0)\n         Predict: 2.0\n      Else (feature 25 > 0.0)\n       If (feature 5 <= 4944.0)\n        If (feature 7 <= 230.0)\n         Predict: 2.0\n        Else (feature 7 > 230.0)\n         Predict: 2.0\n       Else (feature 5 > 4944.0)\n        If (feature 4 <= 56.0)\n         Predict: 2.0\n        Else (feature 4 > 56.0)\n         Predict: 2.0\n     Else (feature 0 > 3052.0)\n      If (feature 51 <= 0.0)\n       If (feature 45 <= 0.0)\n        If (feature 0 <= 3311.0)\n         Predict: 1.0\n        Else (feature 0 > 3311.0)\n         Predict: 1.0\n       Else (feature 45 > 0.0)\n        If (feature 4 <= 32.0)\n         Predict: 2.0\n        Else (feature 4 > 32.0)\n         Predict: 1.0\n      Else (feature 51 > 0.0)\n       If (feature 0 <= 3369.0)\n        Predict: 1.0\n       Else (feature 0 > 3369.0)\n        If (feature 12 <= 0.0)\n         Predict: 1.0\n        Else (feature 12 > 0.0)\n         Predict: 7.0\n\nimport org.apache.spark.ml.classification.RandomForestClassifier\nimport scala.util.Random\nclassifier: org.apache.spark.ml.classification.RandomForestClassifier = rfc_448c16074528\nmodel: org.apache.spark.ml.classification.RandomForestClassificationModel = RandomForestClassificationModel (uid=rfc_448c16074528) with 20 trees\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=4","http://172.17.0.2:4040/jobs/job?id=5","http://172.17.0.2:4040/jobs/job?id=6","http://172.17.0.2:4040/jobs/job?id=7","http://172.17.0.2:4040/jobs/job?id=8","http://172.17.0.2:4040/jobs/job?id=9","http://172.17.0.2:4040/jobs/job?id=10","http://172.17.0.2:4040/jobs/job?id=11","http://172.17.0.2:4040/jobs/job?id=12","http://172.17.0.2:4040/jobs/job?id=13"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1592309146754_12489396","id":"20200522-115149_4523964","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:06:54+0000","dateFinished":"2020-06-16T12:07:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:174"},{"title":"Feature importances","text":"val featureImpact = model.featureImportances.toArray.zip(inputCols).sorted.reverse\nfeatureImpact.foreach(println)","user":"anonymous","dateUpdated":"2020-06-16T12:07:12+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(0.33031529245433433,Elevation)\n(0.20805697749972957,Wilderness_Area_3)\n(0.06345181587459513,Soil_Type_21)\n(0.05262167596912128,Soil_Type_11)\n(0.049363647662693196,Soil_Type_37)\n(0.030977835658058832,Soil_Type_9)\n(0.030248039257143016,Horizontal_Distance_To_Roadways)\n(0.029097516840787742,Horizontal_Distance_To_Fire_Points)\n(0.02717379056628228,Soil_Type_3)\n(0.026763959902045064,Soil_Type_38)\n(0.02214596759838635,Soil_Type_1)\n(0.01904844717660102,Wilderness_Area_0)\n(0.015867198806761858,Wilderness_Area_1)\n(0.014962271123311999,Wilderness_Area_2)\n(0.01422173509294706,Soil_Type_22)\n(0.007861361413777919,Slope)\n(0.007238209940008978,Horizontal_Distance_To_Hydrology)\n(0.00555688581126703,Soil_Type_10)\n(0.005206565869314279,Aspect)\n(0.005167026449248364,Vertical_Distance_To_Hydrology)\n(0.0051491127157954385,Soil_Type_12)\n(0.004755341171041341,Soil_Type_39)\n(0.004310053902008901,Hillshade_9am)\n(0.004139319172898108,Soil_Type_2)\n(0.003802181133379499,Hillshade_Noon)\n(0.003055825359659243,Soil_Type_29)\n(0.002850693625353766,Soil_Type_28)\n(0.0021106025732613143,Soil_Type_31)\n(8.536810794923793E-4,Soil_Type_17)\n(7.483460907813478E-4,Soil_Type_34)\n(5.866498132519664E-4,Soil_Type_32)\n(4.84026431991544E-4,Hillshade_3pm)\n(4.095146816167182E-4,Soil_Type_16)\n(3.4020523343773854E-4,Soil_Type_4)\n(2.236255821138484E-4,Soil_Type_8)\n(2.131753191794065E-4,Soil_Type_19)\n(1.6368843371096536E-4,Soil_Type_13)\n(1.2390497604289553E-4,Soil_Type_20)\n(1.0336378932604615E-4,Soil_Type_23)\n(1.0115008590558459E-4,Soil_Type_0)\n(6.83115705787973E-5,Soil_Type_30)\n(4.338982039160432E-5,Soil_Type_5)\n(1.7616472366164137E-5,Soil_Type_15)\n(0.0,Soil_Type_7)\n(0.0,Soil_Type_6)\n(0.0,Soil_Type_36)\n(0.0,Soil_Type_35)\n(0.0,Soil_Type_33)\n(0.0,Soil_Type_27)\n(0.0,Soil_Type_26)\n(0.0,Soil_Type_25)\n(0.0,Soil_Type_24)\n(0.0,Soil_Type_18)\n(0.0,Soil_Type_14)\nfeatureImpact: Array[(Double, String)] = Array((0.33031529245433433,Elevation), (0.20805697749972957,Wilderness_Area_3), (0.06345181587459513,Soil_Type_21), (0.05262167596912128,Soil_Type_11), (0.049363647662693196,Soil_Type_37), (0.030977835658058832,Soil_Type_9), (0.030248039257143016,Horizontal_Distance_To_Roadways), (0.029097516840787742,Horizontal_Distance_To_Fire_Points), (0.02717379056628228,Soil_Type_3), (0.026763959902045064,Soil_Type_38), (0.02214596759838635,Soil_Type_1), (0.01904844717660102,Wilderness_Area_0), (0.015867198806761858,Wilderness_Area_1), (0.014962271123311999,Wilderness_Area_2), (0.01422173509294706,Soil_Type_22), (0.007861361413777919,Slope), (0.007238209940008978,Horizontal_Distance_To_Hydrology), (0.00555688581126703,Soil_Type_10), (0.005206565869314279,Asp..."}]},"apps":[],"jobName":"paragraph_1592309146755_1137458650","id":"20200522-115607_2112141477","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:07:12+0000","dateFinished":"2020-06-16T12:07:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:175"},{"title":"Predictions","text":"val predictions = model.transform(assembledTrainData)\npredictions.select(\"Cover_Type\", \"prediction\", \"probability\").\n show(truncate = false)","user":"anonymous","dateUpdated":"2020-06-16T12:07:13+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------+\n|Cover_Type|prediction|probability                                                                                                                                          |\n+----------+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------+\n|3.0       |3.0       |[0.0,0.020697376795441112,0.1265239954231606,0.5607358032254247,0.04492218042206285,0.006727476370794616,0.23898657387331185,0.0014065938898042954]  |\n|3.0       |3.0       |[0.0,0.020697376795441112,0.1265239954231606,0.5607358032254247,0.04492218042206285,0.006727476370794616,0.23898657387331185,0.0014065938898042954]  |\n|3.0       |3.0       |[0.0,0.020697376795441112,0.12410422444848476,0.5663821655759017,0.04945007841825831,0.006727476370794616,0.23123208450131522,0.0014065938898042954] |\n|3.0       |3.0       |[0.0,0.020697376795441112,0.1265239954231606,0.5607358032254247,0.04492218042206285,0.006727476370794616,0.23898657387331185,0.0014065938898042954]  |\n|3.0       |3.0       |[0.0,0.020697376795441112,0.1265239954231606,0.5607358032254247,0.04492218042206285,0.006727476370794616,0.23898657387331185,0.0014065938898042954]  |\n|3.0       |3.0       |[0.0,0.020697376795441112,0.12595880482834154,0.5537497962627743,0.043902393817345876,0.006727476370794616,0.24755755803549834,0.0014065938898042954]|\n|6.0       |3.0       |[0.0,0.05310353956933549,0.15458763417973448,0.4303717495557552,0.041408893666711,0.005628821994933876,0.3112480712837831,0.0036512897497468027]     |\n|6.0       |3.0       |[0.0,0.031624511952986725,0.13689109636038865,0.5321977601208447,0.05294241148687273,0.00877453275553757,0.23569149310189047,0.0018781942214792543]  |\n|6.0       |3.0       |[0.0,0.031624511952986725,0.13689109636038865,0.5321977601208447,0.05294241148687273,0.00877453275553757,0.23569149310189047,0.0018781942214792543]  |\n|6.0       |3.0       |[0.0,0.05310353956933548,0.14793486966664485,0.519137577909544,0.03700773019480175,0.005628821994933874,0.2335361709149931,0.0036512897497468022]    |\n|3.0       |3.0       |[0.0,0.020697376795441112,0.12595880482834154,0.5537497962627743,0.043902393817345876,0.006727476370794616,0.24755755803549834,0.0014065938898042954]|\n|6.0       |3.0       |[0.0,0.023709826626601455,0.1093055147993444,0.5462531139513478,0.043595940786761475,0.007082955595531249,0.268176922033466,0.0018757262069475842]   |\n|6.0       |3.0       |[0.0,0.05310353956933549,0.1622872078287249,0.4897371235477134,0.049250988992647945,0.005628821994933876,0.2363410283168975,0.0036512897497468027]   |\n|3.0       |3.0       |[0.0,0.03162451195298672,0.13931086733506445,0.5265513977703676,0.048414513490677255,0.008774532755537568,0.24344598247388713,0.0018781942214792541] |\n|6.0       |3.0       |[0.0,0.050091089738175144,0.16124744847993006,0.38378284125391754,0.18461846660000264,0.005273342770197241,0.21180465372517396,0.0031821574326035135]|\n|3.0       |3.0       |[0.0,0.020697376795441112,0.12727381928886797,0.5424201778838975,0.04545654192578548,0.006727476370794616,0.2560180138454091,0.0014065938898042954]  |\n|6.0       |3.0       |[0.0,0.03162451195298672,0.13970576020968817,0.5137349793018225,0.04281196344666752,0.008774532755537568,0.2614700581118182,0.0018781942214792541]   |\n|3.0       |3.0       |[0.0,0.020697376795441112,0.12727381928886797,0.5424201778838975,0.04545654192578548,0.006727476370794616,0.2560180138454091,0.0014065938898042954]  |\n|6.0       |3.0       |[0.0,0.023709826626601455,0.1093055147993444,0.5462531139513478,0.043595940786761475,0.007082955595531249,0.268176922033466,0.0018757262069475842]   |\n|6.0       |3.0       |[0.0,0.050091089738175144,0.16124744847993006,0.38378284125391754,0.18461846660000264,0.005273342770197241,0.21180465372517396,0.0031821574326035135]|\n+----------+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------+\nonly showing top 20 rows\n\npredictions: org.apache.spark.sql.DataFrame = [Elevation: int, Aspect: int ... 57 more fields]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=14"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1592309146755_-869474004","id":"20200522-115846_1084098791","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:07:13+0000","dateFinished":"2020-06-16T12:07:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:176"},{"title":"Evaluation","text":"import org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\n\nval evaluator = new MulticlassClassificationEvaluator()\n .setLabelCol(\"Cover_Type\")\n .setPredictionCol(\"prediction\")\n \nval acc = evaluator.setMetricName(\"accuracy\").evaluate(predictions)\nval f1 = evaluator.setMetricName(\"f1\").evaluate(predictions)\n\nprint(acc)\nprint(f1)","user":"anonymous","dateUpdated":"2020-06-16T12:07:13+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"0.68556862565254940.6535745745560839import org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nevaluator: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_95773cbb041b\nacc: Double = 0.6855686256525494\nf1: Double = 0.6535745745560839\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=15","http://172.17.0.2:4040/jobs/job?id=16","http://172.17.0.2:4040/jobs/job?id=17","http://172.17.0.2:4040/jobs/job?id=18","http://172.17.0.2:4040/jobs/job?id=19"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1592309146755_2006936952","id":"20200522-120114_1153535296","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:07:13+0000","dateFinished":"2020-06-16T12:07:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:177"},{"title":"Confusion matrix","text":"import org.apache.spark.mllib.evaluation.MulticlassMetrics\n\nval predictionRDD = predictions.select(\"prediction\", \"Cover_Type\").as[(Double,Double)].rdd\nval multiclassMetrics = new MulticlassMetrics(predictionRDD)\nval confusionMatrix = predictions.groupBy(\"Cover_Type\").pivot(\"prediction\", (1 to 7)).count().na.fill(0.0).orderBy(\"Cover_Type\")\n\nconfusionMatrix.show()","user":"anonymous","dateUpdated":"2020-06-16T12:07:41+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+------+------+-----+---+---+---+---+\n|Cover_Type|     1|     2|    3|  4|  5|  6|  7|\n+----------+------+------+-----+---+---+---+---+\n|       1.0|131254| 59465|    0|  0|  0|  0|  0|\n|       2.0| 45256|207587| 2535|  0|  0|  0|  0|\n|       3.0|     0| 12193|19931|  0|  0|  0|  0|\n|       4.0|     0|     5| 2441|  8|  0|  0|  0|\n|       5.0|     0|  8529|    0|  0|  0|  0|  0|\n|       6.0|     0|  6755| 8871|  1|  0|  0|  0|\n|       7.0| 17753|   748|    0|  0|  0|  0|  0|\n+----------+------+------+-----+---+---+---+---+\n\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\npredictionRDD: org.apache.spark.rdd.RDD[(Double, Double)] = MapPartitionsRDD[84] at rdd at <console>:40\nmulticlassMetrics: org.apache.spark.mllib.evaluation.MulticlassMetrics = org.apache.spark.mllib.evaluation.MulticlassMetrics@5185fc3b\nconfusionMatrix: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [Cover_Type: double, 1: bigint ... 6 more fields]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=20"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1592309146755_1889719290","id":"20200522-120222_1343302010","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:07:41+0000","dateFinished":"2020-06-16T12:07:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:178"},{"title":"Class probabilities","text":"import org.apache.spark.sql.DataFrame\n\ndef classProbabilities(data: DataFrame): Array[Double] = {\n val total = data.count()\n data.groupBy(\"Cover_Type\").count().orderBy(\"Cover_Type\").select(\"count\").as[Double].map(_ / total).collect()\n}\n\nval trainPriorProbabilities = classProbabilities(trainData)\nval testPriorProbabilities = classProbabilities(testData)\n\ntrainPriorProbabilities.zip(testPriorProbabilities).map {\n case (trainProb, cvProb) => trainProb * cvProb\n}.sum","user":"anonymous","dateUpdated":"2020-06-16T12:07:50+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.DataFrame\nclassProbabilities: (data: org.apache.spark.sql.DataFrame)Array[Double]\ntrainPriorProbabilities: Array[Double] = Array(0.3644321386806081, 0.48798468276352297, 0.061383595881772945, 0.004689183921487698, 0.016297493751576436, 0.029860585632065305, 0.035352319368966545)\ntestPriorProbabilities: Array[Double] = Array(0.3661754507628294, 0.4841019417475728, 0.06293342579750347, 0.005079750346740638, 0.016712898751733703, 0.030166435506241332, 0.03483009708737864)\nres9: Double = 0.3759718254924996\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=21","http://172.17.0.2:4040/jobs/job?id=22","http://172.17.0.2:4040/jobs/job?id=23","http://172.17.0.2:4040/jobs/job?id=24","http://172.17.0.2:4040/jobs/job?id=25","http://172.17.0.2:4040/jobs/job?id=26"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1592309146756_-743870352","id":"20200522-120440_1890178674","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:07:50+0000","dateFinished":"2020-06-16T12:07:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:179"},{"text":"%spark\n\n// val list = trainPriorProbabilities.toList\n// val cols = Array(\"col1\", \"col2\", \"col3\", \"col4\", \"col5\", \"col6\", \"col7\")\n// val df = list.zip(cols).toDF(\"Values\", \"Labels\")\n\n\n\n// val data = Seq((0.0,0.4,0.4,0.0),(0.1,0.0,0.0,0.7),(0.0,0.2,0.0,0.3),(0.3,0.0,0.0,0.0))\n// val cols = Array(\"p1\", \"p2\", \"p3\", \"p4\",\"index\")\n\n// val df = data.zip(cols).map { \n//   case (col,index) => (col._1,col._2,col._3,col._4,index)\n// }.toDF(cols: _*)\n\n// z.show(df)\n\n\n// val list = trainPriorProbabilities.toSeq\n\n\n// val df = spark.createDataFrame(trainPriorProbabilities, Array(\"col1\", \"col2\", \"col3\", \"col4\", \"col5\", \"col6\", \"col7\"))\n\n//val df = spark.createDataFrame(sc.parallelize([[\"value\" + str(i) for i in range(1, 5)]]), \n//    [\"col\" + str(i) for i in range(1, 5)]\n//)\n\n//val new_schema = StructType(df.select(collect_list(\"value\")).first().getAs[Seq[Double]](0).map(z => StructField(z, StringType)))\n//val new_values = sc.parallelize(Seq(Row.fromSeq(df.select(collect_list(\"value\")).first().getAs[Seq[Double]](0))))\n//sqlContext.createDataFrame(new_values, new_schema).show(false)\n\n// z.show(df)","user":"anonymous","dateUpdated":"2020-06-16T12:07:58+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"pieChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Values":"string","Labels":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[],"groups":[],"values":[]},"helium":{}},"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Elevation":"string","Aspect":"string","Slope":"string","Horizontal_Distance_To_Hydrology":"string","Vertical_Distance_To_Hydrology":"string","Horizontal_Distance_To_Roadways":"string","Hillshade_9am":"string","Hillshade_Noon":"string","Hillshade_3pm":"string","Horizontal_Distance_To_Fire_Points":"string","Wilderness_Area_0":"string","Wilderness_Area_1":"string","Wilderness_Area_2":"string","Wilderness_Area_3":"string","Soil_Type_0":"string","Soil_Type_1":"string","Soil_Type_2":"string","Soil_Type_3":"string","Soil_Type_4":"string","Soil_Type_5":"string","Soil_Type_6":"string","Soil_Type_7":"string","Soil_Type_8":"string","Soil_Type_9":"string","Soil_Type_10":"string","Soil_Type_11":"string","Soil_Type_12":"string","Soil_Type_13":"string","Soil_Type_14":"string","Soil_Type_15":"string","Soil_Type_16":"string","Soil_Type_17":"string","Soil_Type_18":"string","Soil_Type_19":"string","Soil_Type_20":"string","Soil_Type_21":"string","Soil_Type_22":"string","Soil_Type_23":"string","Soil_Type_24":"string","Soil_Type_25":"string","Soil_Type_26":"string","Soil_Type_27":"string","Soil_Type_28":"string","Soil_Type_29":"string","Soil_Type_30":"string","Soil_Type_31":"string","Soil_Type_32":"string","Soil_Type_33":"string","Soil_Type_34":"string","Soil_Type_35":"string","Soil_Type_36":"string","Soil_Type_37":"string","Soil_Type_38":"string","Soil_Type_39":"string","Cover_Type":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"Elevation","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"Aspect","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1592309146756_1546840904","id":"20200605-093250_1234714069","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:07:58+0000","dateFinished":"2020-06-16T12:07:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:180"},{"title":"Pipeline creation","text":"import org.apache.spark.ml.Pipeline\n\nval inputCols = trainData.columns.filter(_ != \"Cover_Type\")\nval assembler = new VectorAssembler().setInputCols(inputCols).setOutputCol(\"featureVector\")\nval classifier = new RandomForestClassifier()\n .setSeed(Random.nextLong())\n .setLabelCol(\"Cover_Type\")\n .setFeaturesCol(\"featureVector\")\n .setPredictionCol(\"prediction\")\n \nval pipeline = new Pipeline().setStages(Array(assembler, classifier))","user":"anonymous","dateUpdated":"2020-06-16T12:07:59+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.Pipeline\ninputCols: Array[String] = Array(Elevation, Aspect, Slope, Horizontal_Distance_To_Hydrology, Vertical_Distance_To_Hydrology, Horizontal_Distance_To_Roadways, Hillshade_9am, Hillshade_Noon, Hillshade_3pm, Horizontal_Distance_To_Fire_Points, Wilderness_Area_0, Wilderness_Area_1, Wilderness_Area_2, Wilderness_Area_3, Soil_Type_0, Soil_Type_1, Soil_Type_2, Soil_Type_3, Soil_Type_4, Soil_Type_5, Soil_Type_6, Soil_Type_7, Soil_Type_8, Soil_Type_9, Soil_Type_10, Soil_Type_11, Soil_Type_12, Soil_Type_13, Soil_Type_14, Soil_Type_15, Soil_Type_16, Soil_Type_17, Soil_Type_18, Soil_Type_19, Soil_Type_20, Soil_Type_21, Soil_Type_22, Soil_Type_23, Soil_Type_24, Soil_Type_25, Soil_Type_26, Soil_Type_27, Soil_Type_28, Soil_Type_29, Soil_Type_30, Soil_Type_31, Soil_Ty..."}]},"apps":[],"jobName":"paragraph_1592309146756_731545993","id":"20200522-120812_232122447","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:07:59+0000","dateFinished":"2020-06-16T12:07:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:181"},{"title":"Create paramGrid","text":"import org.apache.spark.ml.tuning.ParamGridBuilder\n\nval paramGrid = new ParamGridBuilder()\n .addGrid(classifier.impurity, Seq(\"gini\", \"entropy\"))\n .addGrid(classifier.maxDepth, Seq(1, 10))\n .addGrid(classifier.maxBins, Seq(40, 200))\n .addGrid(classifier.minInfoGain, Seq(0.0, 0.05))\n .build()\n \nval multiclassEval = new MulticlassClassificationEvaluator()\n .setLabelCol(\"Cover_Type\")\n .setPredictionCol(\"prediction\")\n .setMetricName(\"accuracy\")","user":"anonymous","dateUpdated":"2020-06-16T12:07:59+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.tuning.ParamGridBuilder\nparamGrid: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 40,\n\trfc_9c4915d22fd5-maxDepth: 1,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}, {\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 40,\n\trfc_9c4915d22fd5-maxDepth: 1,\n\trfc_9c4915d22fd5-minInfoGain: 0.05\n}, {\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 200,\n\trfc_9c4915d22fd5-maxDepth: 1,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}, {\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 200,\n\trfc_9c4915d22fd5-maxDepth: 1,\n\trfc_9c4915d22fd5-minInfoGain: 0.05\n}, {\n\trfc_9c4915d22fd5-impurity: entropy,\n\trfc_9c4915d22fd5-maxBins: 40,\n\trfc_9c4915d22fd5-maxDepth: 1,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}..."}]},"apps":[],"jobName":"paragraph_1592309146756_-1544193261","id":"20200522-121051_172300881","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:07:59+0000","dateFinished":"2020-06-16T12:07:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:182"},{"title":"Validator","text":"import org.apache.spark.ml.tuning.TrainValidationSplit\n\nval validator = new TrainValidationSplit()\n .setSeed(Random.nextLong())\n .setEstimator(pipeline)\n .setEvaluator(multiclassEval)\n .setEstimatorParamMaps(paramGrid)\n .setTrainRatio(0.9)\n \nval validatorModel = validator.fit(trainData)\n","user":"anonymous","dateUpdated":"2020-06-16T12:07:59+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.tuning.TrainValidationSplit\nvalidator: org.apache.spark.ml.tuning.TrainValidationSplit = tvs_7316693cc0eb\nvalidatorModel: org.apache.spark.ml.tuning.TrainValidationSplitModel = tvs_7316693cc0eb\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=27","http://172.17.0.2:4040/jobs/job?id=28","http://172.17.0.2:4040/jobs/job?id=29","http://172.17.0.2:4040/jobs/job?id=30","http://172.17.0.2:4040/jobs/job?id=31","http://172.17.0.2:4040/jobs/job?id=32","http://172.17.0.2:4040/jobs/job?id=33","http://172.17.0.2:4040/jobs/job?id=34","http://172.17.0.2:4040/jobs/job?id=35","http://172.17.0.2:4040/jobs/job?id=36","http://172.17.0.2:4040/jobs/job?id=37","http://172.17.0.2:4040/jobs/job?id=38","http://172.17.0.2:4040/jobs/job?id=39","http://172.17.0.2:4040/jobs/job?id=40","http://172.17.0.2:4040/jobs/job?id=41","http://172.17.0.2:4040/jobs/job?id=42","http://172.17.0.2:4040/jobs/job?id=43","http://172.17.0.2:4040/jobs/job?id=44","http://172.17.0.2:4040/jobs/job?id=45","http://172.17.0.2:4040/jobs/job?id=46","http://172.17.0.2:4040/jobs/job?id=47","http://172.17.0.2:4040/jobs/job?id=48","http://172.17.0.2:4040/jobs/job?id=49","http://172.17.0.2:4040/jobs/job?id=50","http://172.17.0.2:4040/jobs/job?id=51","http://172.17.0.2:4040/jobs/job?id=52","http://172.17.0.2:4040/jobs/job?id=53","http://172.17.0.2:4040/jobs/job?id=54","http://172.17.0.2:4040/jobs/job?id=55","http://172.17.0.2:4040/jobs/job?id=56","http://172.17.0.2:4040/jobs/job?id=57","http://172.17.0.2:4040/jobs/job?id=58","http://172.17.0.2:4040/jobs/job?id=59","http://172.17.0.2:4040/jobs/job?id=60","http://172.17.0.2:4040/jobs/job?id=61","http://172.17.0.2:4040/jobs/job?id=62","http://172.17.0.2:4040/jobs/job?id=63","http://172.17.0.2:4040/jobs/job?id=64","http://172.17.0.2:4040/jobs/job?id=65","http://172.17.0.2:4040/jobs/job?id=66","http://172.17.0.2:4040/jobs/job?id=67","http://172.17.0.2:4040/jobs/job?id=68","http://172.17.0.2:4040/jobs/job?id=69","http://172.17.0.2:4040/jobs/job?id=70","http://172.17.0.2:4040/jobs/job?id=71","http://172.17.0.2:4040/jobs/job?id=72","http://172.17.0.2:4040/jobs/job?id=73","http://172.17.0.2:4040/jobs/job?id=74","http://172.17.0.2:4040/jobs/job?id=75","http://172.17.0.2:4040/jobs/job?id=76","http://172.17.0.2:4040/jobs/job?id=77","http://172.17.0.2:4040/jobs/job?id=78","http://172.17.0.2:4040/jobs/job?id=79","http://172.17.0.2:4040/jobs/job?id=80","http://172.17.0.2:4040/jobs/job?id=81","http://172.17.0.2:4040/jobs/job?id=82","http://172.17.0.2:4040/jobs/job?id=83","http://172.17.0.2:4040/jobs/job?id=84","http://172.17.0.2:4040/jobs/job?id=85","http://172.17.0.2:4040/jobs/job?id=86","http://172.17.0.2:4040/jobs/job?id=87","http://172.17.0.2:4040/jobs/job?id=88","http://172.17.0.2:4040/jobs/job?id=89","http://172.17.0.2:4040/jobs/job?id=90","http://172.17.0.2:4040/jobs/job?id=91","http://172.17.0.2:4040/jobs/job?id=92","http://172.17.0.2:4040/jobs/job?id=93","http://172.17.0.2:4040/jobs/job?id=94","http://172.17.0.2:4040/jobs/job?id=95","http://172.17.0.2:4040/jobs/job?id=96","http://172.17.0.2:4040/jobs/job?id=97","http://172.17.0.2:4040/jobs/job?id=98","http://172.17.0.2:4040/jobs/job?id=99","http://172.17.0.2:4040/jobs/job?id=100","http://172.17.0.2:4040/jobs/job?id=101","http://172.17.0.2:4040/jobs/job?id=102","http://172.17.0.2:4040/jobs/job?id=103","http://172.17.0.2:4040/jobs/job?id=104","http://172.17.0.2:4040/jobs/job?id=105","http://172.17.0.2:4040/jobs/job?id=106","http://172.17.0.2:4040/jobs/job?id=107","http://172.17.0.2:4040/jobs/job?id=108","http://172.17.0.2:4040/jobs/job?id=109","http://172.17.0.2:4040/jobs/job?id=110","http://172.17.0.2:4040/jobs/job?id=111","http://172.17.0.2:4040/jobs/job?id=112","http://172.17.0.2:4040/jobs/job?id=113","http://172.17.0.2:4040/jobs/job?id=114","http://172.17.0.2:4040/jobs/job?id=115","http://172.17.0.2:4040/jobs/job?id=116","http://172.17.0.2:4040/jobs/job?id=117","http://172.17.0.2:4040/jobs/job?id=118","http://172.17.0.2:4040/jobs/job?id=119","http://172.17.0.2:4040/jobs/job?id=120","http://172.17.0.2:4040/jobs/job?id=121","http://172.17.0.2:4040/jobs/job?id=122","http://172.17.0.2:4040/jobs/job?id=123","http://172.17.0.2:4040/jobs/job?id=124","http://172.17.0.2:4040/jobs/job?id=125","http://172.17.0.2:4040/jobs/job?id=126","http://172.17.0.2:4040/jobs/job?id=127","http://172.17.0.2:4040/jobs/job?id=128","http://172.17.0.2:4040/jobs/job?id=129","http://172.17.0.2:4040/jobs/job?id=130","http://172.17.0.2:4040/jobs/job?id=131","http://172.17.0.2:4040/jobs/job?id=132","http://172.17.0.2:4040/jobs/job?id=133","http://172.17.0.2:4040/jobs/job?id=134","http://172.17.0.2:4040/jobs/job?id=135","http://172.17.0.2:4040/jobs/job?id=136","http://172.17.0.2:4040/jobs/job?id=137","http://172.17.0.2:4040/jobs/job?id=138","http://172.17.0.2:4040/jobs/job?id=139","http://172.17.0.2:4040/jobs/job?id=140","http://172.17.0.2:4040/jobs/job?id=141","http://172.17.0.2:4040/jobs/job?id=142","http://172.17.0.2:4040/jobs/job?id=143","http://172.17.0.2:4040/jobs/job?id=144","http://172.17.0.2:4040/jobs/job?id=145","http://172.17.0.2:4040/jobs/job?id=146","http://172.17.0.2:4040/jobs/job?id=147","http://172.17.0.2:4040/jobs/job?id=148","http://172.17.0.2:4040/jobs/job?id=149","http://172.17.0.2:4040/jobs/job?id=150","http://172.17.0.2:4040/jobs/job?id=151","http://172.17.0.2:4040/jobs/job?id=152","http://172.17.0.2:4040/jobs/job?id=153","http://172.17.0.2:4040/jobs/job?id=154","http://172.17.0.2:4040/jobs/job?id=155","http://172.17.0.2:4040/jobs/job?id=156","http://172.17.0.2:4040/jobs/job?id=157","http://172.17.0.2:4040/jobs/job?id=158","http://172.17.0.2:4040/jobs/job?id=159","http://172.17.0.2:4040/jobs/job?id=160","http://172.17.0.2:4040/jobs/job?id=161","http://172.17.0.2:4040/jobs/job?id=162","http://172.17.0.2:4040/jobs/job?id=163","http://172.17.0.2:4040/jobs/job?id=164","http://172.17.0.2:4040/jobs/job?id=165","http://172.17.0.2:4040/jobs/job?id=166","http://172.17.0.2:4040/jobs/job?id=167","http://172.17.0.2:4040/jobs/job?id=168","http://172.17.0.2:4040/jobs/job?id=169","http://172.17.0.2:4040/jobs/job?id=170","http://172.17.0.2:4040/jobs/job?id=171","http://172.17.0.2:4040/jobs/job?id=172","http://172.17.0.2:4040/jobs/job?id=173","http://172.17.0.2:4040/jobs/job?id=174","http://172.17.0.2:4040/jobs/job?id=175","http://172.17.0.2:4040/jobs/job?id=176","http://172.17.0.2:4040/jobs/job?id=177","http://172.17.0.2:4040/jobs/job?id=178","http://172.17.0.2:4040/jobs/job?id=179","http://172.17.0.2:4040/jobs/job?id=180","http://172.17.0.2:4040/jobs/job?id=181","http://172.17.0.2:4040/jobs/job?id=182","http://172.17.0.2:4040/jobs/job?id=183","http://172.17.0.2:4040/jobs/job?id=184","http://172.17.0.2:4040/jobs/job?id=185","http://172.17.0.2:4040/jobs/job?id=186","http://172.17.0.2:4040/jobs/job?id=187","http://172.17.0.2:4040/jobs/job?id=188","http://172.17.0.2:4040/jobs/job?id=189","http://172.17.0.2:4040/jobs/job?id=190","http://172.17.0.2:4040/jobs/job?id=191","http://172.17.0.2:4040/jobs/job?id=192","http://172.17.0.2:4040/jobs/job?id=193","http://172.17.0.2:4040/jobs/job?id=194","http://172.17.0.2:4040/jobs/job?id=195","http://172.17.0.2:4040/jobs/job?id=196","http://172.17.0.2:4040/jobs/job?id=197","http://172.17.0.2:4040/jobs/job?id=198","http://172.17.0.2:4040/jobs/job?id=199","http://172.17.0.2:4040/jobs/job?id=200","http://172.17.0.2:4040/jobs/job?id=201","http://172.17.0.2:4040/jobs/job?id=202","http://172.17.0.2:4040/jobs/job?id=203","http://172.17.0.2:4040/jobs/job?id=204","http://172.17.0.2:4040/jobs/job?id=205","http://172.17.0.2:4040/jobs/job?id=206","http://172.17.0.2:4040/jobs/job?id=207","http://172.17.0.2:4040/jobs/job?id=208","http://172.17.0.2:4040/jobs/job?id=209","http://172.17.0.2:4040/jobs/job?id=210","http://172.17.0.2:4040/jobs/job?id=211","http://172.17.0.2:4040/jobs/job?id=212","http://172.17.0.2:4040/jobs/job?id=213","http://172.17.0.2:4040/jobs/job?id=214","http://172.17.0.2:4040/jobs/job?id=215","http://172.17.0.2:4040/jobs/job?id=216","http://172.17.0.2:4040/jobs/job?id=217","http://172.17.0.2:4040/jobs/job?id=218","http://172.17.0.2:4040/jobs/job?id=219","http://172.17.0.2:4040/jobs/job?id=220","http://172.17.0.2:4040/jobs/job?id=221","http://172.17.0.2:4040/jobs/job?id=222","http://172.17.0.2:4040/jobs/job?id=223","http://172.17.0.2:4040/jobs/job?id=224","http://172.17.0.2:4040/jobs/job?id=225"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1592309146756_-1402930933","id":"20200522-121247_1908914091","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:07:59+0000","dateFinished":"2020-06-16T12:13:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:183"},{"title":"Get best model","text":"import org.apache.spark.ml.PipelineModel\n\nval bestModel = validatorModel.bestModel\nbestModel.asInstanceOf[PipelineModel].stages.last.extractParamMap","user":"anonymous","dateUpdated":"2020-06-16T12:13:02+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.PipelineModel\nbestModel: org.apache.spark.ml.Model[_] = pipeline_545e5259479f\nres12: org.apache.spark.ml.param.ParamMap =\n{\n\trfc_9c4915d22fd5-cacheNodeIds: false,\n\trfc_9c4915d22fd5-checkpointInterval: 10,\n\trfc_9c4915d22fd5-featureSubsetStrategy: auto,\n\trfc_9c4915d22fd5-featuresCol: featureVector,\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-labelCol: Cover_Type,\n\trfc_9c4915d22fd5-maxBins: 200,\n\trfc_9c4915d22fd5-maxDepth: 10,\n\trfc_9c4915d22fd5-maxMemoryInMB: 256,\n\trfc_9c4915d22fd5-minInfoGain: 0.0,\n\trfc_9c4915d22fd5-minInstancesPerNode: 1,\n\trfc_9c4915d22fd5-numTrees: 20,\n\trfc_9c4915d22fd5-predictionCol: prediction,\n\trfc_9c4915d22fd5-probabilityCol: probability,\n\trfc_9c4915d22fd5-rawPredictionCol: rawPrediction,\n\trfc_9c4915d22fd5-seed: -111544850220916536..."}]},"apps":[],"jobName":"paragraph_1592309146757_-1497690121","id":"20200522-121335_525167696","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:13:02+0000","dateFinished":"2020-06-16T12:13:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:184"},{"title":"Get best model params","text":"val validatorModel = validator.fit(trainData)\nval paramsAndMetrics = validatorModel.validationMetrics.zip(validatorModel.getEstimatorParamMaps).sortBy(-_._1)\n\nparamsAndMetrics.foreach { case (metric, params) =>\n println(metric)\n println(params)\n println()\n}","user":"anonymous","dateUpdated":"2020-06-16T12:13:02+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"0.7497615322980655\n{\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 200,\n\trfc_9c4915d22fd5-maxDepth: 10,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}\n\n0.7491701323972682\n{\n\trfc_9c4915d22fd5-impurity: entropy,\n\trfc_9c4915d22fd5-maxBins: 40,\n\trfc_9c4915d22fd5-maxDepth: 10,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}\n\n0.747930100347209\n{\n\trfc_9c4915d22fd5-impurity: entropy,\n\trfc_9c4915d22fd5-maxBins: 200,\n\trfc_9c4915d22fd5-maxDepth: 10,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}\n\n0.7392117211644855\n{\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 40,\n\trfc_9c4915d22fd5-maxDepth: 10,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}\n\n0.5192109580678393\n{\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 40,\n\trfc_9c4915d22fd5-maxDepth: 1,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}\n\n0.5188103323285894\n{\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 200,\n\trfc_9c4915d22fd5-maxDepth: 1,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}\n\n0.5052653668587127\n{\n\trfc_9c4915d22fd5-impurity: entropy,\n\trfc_9c4915d22fd5-maxBins: 200,\n\trfc_9c4915d22fd5-maxDepth: 10,\n\trfc_9c4915d22fd5-minInfoGain: 0.05\n}\n\n0.5045213476286772\n{\n\trfc_9c4915d22fd5-impurity: entropy,\n\trfc_9c4915d22fd5-maxBins: 40,\n\trfc_9c4915d22fd5-maxDepth: 10,\n\trfc_9c4915d22fd5-minInfoGain: 0.05\n}\n\n0.4926170399481094\n{\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 40,\n\trfc_9c4915d22fd5-maxDepth: 1,\n\trfc_9c4915d22fd5-minInfoGain: 0.05\n}\n\n0.4926170399481094\n{\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 200,\n\trfc_9c4915d22fd5-maxDepth: 1,\n\trfc_9c4915d22fd5-minInfoGain: 0.05\n}\n\n0.4926170399481094\n{\n\trfc_9c4915d22fd5-impurity: entropy,\n\trfc_9c4915d22fd5-maxBins: 40,\n\trfc_9c4915d22fd5-maxDepth: 1,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}\n\n0.4926170399481094\n{\n\trfc_9c4915d22fd5-impurity: entropy,\n\trfc_9c4915d22fd5-maxBins: 40,\n\trfc_9c4915d22fd5-maxDepth: 1,\n\trfc_9c4915d22fd5-minInfoGain: 0.05\n}\n\n0.4926170399481094\n{\n\trfc_9c4915d22fd5-impurity: entropy,\n\trfc_9c4915d22fd5-maxBins: 200,\n\trfc_9c4915d22fd5-maxDepth: 1,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}\n\n0.4926170399481094\n{\n\trfc_9c4915d22fd5-impurity: entropy,\n\trfc_9c4915d22fd5-maxBins: 200,\n\trfc_9c4915d22fd5-maxDepth: 1,\n\trfc_9c4915d22fd5-minInfoGain: 0.05\n}\n\n0.4926170399481094\n{\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 40,\n\trfc_9c4915d22fd5-maxDepth: 10,\n\trfc_9c4915d22fd5-minInfoGain: 0.05\n}\n\n0.4926170399481094\n{\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 200,\n\trfc_9c4915d22fd5-maxDepth: 10,\n\trfc_9c4915d22fd5-minInfoGain: 0.05\n}\n\nvalidatorModel: org.apache.spark.ml.tuning.TrainValidationSplitModel = tvs_7316693cc0eb\nparamsAndMetrics: Array[(Double, org.apache.spark.ml.param.ParamMap)] =\nArray((0.7497615322980655,{\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 200,\n\trfc_9c4915d22fd5-maxDepth: 10,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}), (0.7491701323972682,{\n\trfc_9c4915d22fd5-impurity: entropy,\n\trfc_9c4915d22fd5-maxBins: 40,\n\trfc_9c4915d22fd5-maxDepth: 10,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}), (0.747930100347209,{\n\trfc_9c4915d22fd5-impurity: entropy,\n\trfc_9c4915d22fd5-maxBins: 200,\n\trfc_9c4915d22fd5-maxDepth: 10,\n\trfc_9c4915d22fd5-minInfoGain: 0.0\n}), (0.7392117211644855,{\n\trfc_9c4915d22fd5-impurity: gini,\n\trfc_9c4915d22fd5-maxBins: 40,\n\trfc_9c4915d22fd5-maxDepth: 10,\n\trfc_9c4915d22fd5-minInfoGain: ..."}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=226","http://172.17.0.2:4040/jobs/job?id=227","http://172.17.0.2:4040/jobs/job?id=228","http://172.17.0.2:4040/jobs/job?id=229","http://172.17.0.2:4040/jobs/job?id=230","http://172.17.0.2:4040/jobs/job?id=231","http://172.17.0.2:4040/jobs/job?id=232","http://172.17.0.2:4040/jobs/job?id=233","http://172.17.0.2:4040/jobs/job?id=234","http://172.17.0.2:4040/jobs/job?id=235","http://172.17.0.2:4040/jobs/job?id=236","http://172.17.0.2:4040/jobs/job?id=237","http://172.17.0.2:4040/jobs/job?id=238","http://172.17.0.2:4040/jobs/job?id=239","http://172.17.0.2:4040/jobs/job?id=240","http://172.17.0.2:4040/jobs/job?id=241","http://172.17.0.2:4040/jobs/job?id=242","http://172.17.0.2:4040/jobs/job?id=243","http://172.17.0.2:4040/jobs/job?id=244","http://172.17.0.2:4040/jobs/job?id=245","http://172.17.0.2:4040/jobs/job?id=246","http://172.17.0.2:4040/jobs/job?id=247","http://172.17.0.2:4040/jobs/job?id=248","http://172.17.0.2:4040/jobs/job?id=249","http://172.17.0.2:4040/jobs/job?id=250","http://172.17.0.2:4040/jobs/job?id=251","http://172.17.0.2:4040/jobs/job?id=252","http://172.17.0.2:4040/jobs/job?id=253","http://172.17.0.2:4040/jobs/job?id=254","http://172.17.0.2:4040/jobs/job?id=255","http://172.17.0.2:4040/jobs/job?id=256","http://172.17.0.2:4040/jobs/job?id=257","http://172.17.0.2:4040/jobs/job?id=258","http://172.17.0.2:4040/jobs/job?id=259","http://172.17.0.2:4040/jobs/job?id=260","http://172.17.0.2:4040/jobs/job?id=261","http://172.17.0.2:4040/jobs/job?id=262","http://172.17.0.2:4040/jobs/job?id=263","http://172.17.0.2:4040/jobs/job?id=264","http://172.17.0.2:4040/jobs/job?id=265","http://172.17.0.2:4040/jobs/job?id=266","http://172.17.0.2:4040/jobs/job?id=267","http://172.17.0.2:4040/jobs/job?id=268","http://172.17.0.2:4040/jobs/job?id=269","http://172.17.0.2:4040/jobs/job?id=270","http://172.17.0.2:4040/jobs/job?id=271","http://172.17.0.2:4040/jobs/job?id=272","http://172.17.0.2:4040/jobs/job?id=273","http://172.17.0.2:4040/jobs/job?id=274","http://172.17.0.2:4040/jobs/job?id=275","http://172.17.0.2:4040/jobs/job?id=276","http://172.17.0.2:4040/jobs/job?id=277","http://172.17.0.2:4040/jobs/job?id=278","http://172.17.0.2:4040/jobs/job?id=279","http://172.17.0.2:4040/jobs/job?id=280","http://172.17.0.2:4040/jobs/job?id=281","http://172.17.0.2:4040/jobs/job?id=282","http://172.17.0.2:4040/jobs/job?id=283","http://172.17.0.2:4040/jobs/job?id=284","http://172.17.0.2:4040/jobs/job?id=285","http://172.17.0.2:4040/jobs/job?id=286","http://172.17.0.2:4040/jobs/job?id=287","http://172.17.0.2:4040/jobs/job?id=288","http://172.17.0.2:4040/jobs/job?id=289","http://172.17.0.2:4040/jobs/job?id=290","http://172.17.0.2:4040/jobs/job?id=291","http://172.17.0.2:4040/jobs/job?id=292","http://172.17.0.2:4040/jobs/job?id=293","http://172.17.0.2:4040/jobs/job?id=294","http://172.17.0.2:4040/jobs/job?id=295","http://172.17.0.2:4040/jobs/job?id=296","http://172.17.0.2:4040/jobs/job?id=297","http://172.17.0.2:4040/jobs/job?id=298","http://172.17.0.2:4040/jobs/job?id=299","http://172.17.0.2:4040/jobs/job?id=300","http://172.17.0.2:4040/jobs/job?id=301","http://172.17.0.2:4040/jobs/job?id=302","http://172.17.0.2:4040/jobs/job?id=303","http://172.17.0.2:4040/jobs/job?id=304","http://172.17.0.2:4040/jobs/job?id=305","http://172.17.0.2:4040/jobs/job?id=306","http://172.17.0.2:4040/jobs/job?id=307","http://172.17.0.2:4040/jobs/job?id=308","http://172.17.0.2:4040/jobs/job?id=309","http://172.17.0.2:4040/jobs/job?id=310","http://172.17.0.2:4040/jobs/job?id=311","http://172.17.0.2:4040/jobs/job?id=312","http://172.17.0.2:4040/jobs/job?id=313","http://172.17.0.2:4040/jobs/job?id=314","http://172.17.0.2:4040/jobs/job?id=315","http://172.17.0.2:4040/jobs/job?id=316","http://172.17.0.2:4040/jobs/job?id=317","http://172.17.0.2:4040/jobs/job?id=318","http://172.17.0.2:4040/jobs/job?id=319","http://172.17.0.2:4040/jobs/job?id=320","http://172.17.0.2:4040/jobs/job?id=321","http://172.17.0.2:4040/jobs/job?id=322","http://172.17.0.2:4040/jobs/job?id=323","http://172.17.0.2:4040/jobs/job?id=324","http://172.17.0.2:4040/jobs/job?id=325","http://172.17.0.2:4040/jobs/job?id=326","http://172.17.0.2:4040/jobs/job?id=327","http://172.17.0.2:4040/jobs/job?id=328","http://172.17.0.2:4040/jobs/job?id=329","http://172.17.0.2:4040/jobs/job?id=330","http://172.17.0.2:4040/jobs/job?id=331","http://172.17.0.2:4040/jobs/job?id=332","http://172.17.0.2:4040/jobs/job?id=333","http://172.17.0.2:4040/jobs/job?id=334","http://172.17.0.2:4040/jobs/job?id=335","http://172.17.0.2:4040/jobs/job?id=336","http://172.17.0.2:4040/jobs/job?id=337","http://172.17.0.2:4040/jobs/job?id=338","http://172.17.0.2:4040/jobs/job?id=339","http://172.17.0.2:4040/jobs/job?id=340","http://172.17.0.2:4040/jobs/job?id=341","http://172.17.0.2:4040/jobs/job?id=342","http://172.17.0.2:4040/jobs/job?id=343","http://172.17.0.2:4040/jobs/job?id=344","http://172.17.0.2:4040/jobs/job?id=345","http://172.17.0.2:4040/jobs/job?id=346","http://172.17.0.2:4040/jobs/job?id=347","http://172.17.0.2:4040/jobs/job?id=348","http://172.17.0.2:4040/jobs/job?id=349","http://172.17.0.2:4040/jobs/job?id=350","http://172.17.0.2:4040/jobs/job?id=351","http://172.17.0.2:4040/jobs/job?id=352","http://172.17.0.2:4040/jobs/job?id=353","http://172.17.0.2:4040/jobs/job?id=354","http://172.17.0.2:4040/jobs/job?id=355","http://172.17.0.2:4040/jobs/job?id=356","http://172.17.0.2:4040/jobs/job?id=357","http://172.17.0.2:4040/jobs/job?id=358","http://172.17.0.2:4040/jobs/job?id=359","http://172.17.0.2:4040/jobs/job?id=360","http://172.17.0.2:4040/jobs/job?id=361","http://172.17.0.2:4040/jobs/job?id=362","http://172.17.0.2:4040/jobs/job?id=363","http://172.17.0.2:4040/jobs/job?id=364","http://172.17.0.2:4040/jobs/job?id=365","http://172.17.0.2:4040/jobs/job?id=366","http://172.17.0.2:4040/jobs/job?id=367","http://172.17.0.2:4040/jobs/job?id=368","http://172.17.0.2:4040/jobs/job?id=369","http://172.17.0.2:4040/jobs/job?id=370","http://172.17.0.2:4040/jobs/job?id=371","http://172.17.0.2:4040/jobs/job?id=372","http://172.17.0.2:4040/jobs/job?id=373","http://172.17.0.2:4040/jobs/job?id=374","http://172.17.0.2:4040/jobs/job?id=375","http://172.17.0.2:4040/jobs/job?id=376","http://172.17.0.2:4040/jobs/job?id=377","http://172.17.0.2:4040/jobs/job?id=378","http://172.17.0.2:4040/jobs/job?id=379","http://172.17.0.2:4040/jobs/job?id=380","http://172.17.0.2:4040/jobs/job?id=381","http://172.17.0.2:4040/jobs/job?id=382","http://172.17.0.2:4040/jobs/job?id=383","http://172.17.0.2:4040/jobs/job?id=384","http://172.17.0.2:4040/jobs/job?id=385","http://172.17.0.2:4040/jobs/job?id=386","http://172.17.0.2:4040/jobs/job?id=387","http://172.17.0.2:4040/jobs/job?id=388","http://172.17.0.2:4040/jobs/job?id=389","http://172.17.0.2:4040/jobs/job?id=390","http://172.17.0.2:4040/jobs/job?id=391","http://172.17.0.2:4040/jobs/job?id=392","http://172.17.0.2:4040/jobs/job?id=393","http://172.17.0.2:4040/jobs/job?id=394","http://172.17.0.2:4040/jobs/job?id=395","http://172.17.0.2:4040/jobs/job?id=396","http://172.17.0.2:4040/jobs/job?id=397","http://172.17.0.2:4040/jobs/job?id=398","http://172.17.0.2:4040/jobs/job?id=399","http://172.17.0.2:4040/jobs/job?id=400","http://172.17.0.2:4040/jobs/job?id=401","http://172.17.0.2:4040/jobs/job?id=402","http://172.17.0.2:4040/jobs/job?id=403","http://172.17.0.2:4040/jobs/job?id=404","http://172.17.0.2:4040/jobs/job?id=405","http://172.17.0.2:4040/jobs/job?id=406","http://172.17.0.2:4040/jobs/job?id=407","http://172.17.0.2:4040/jobs/job?id=408","http://172.17.0.2:4040/jobs/job?id=409","http://172.17.0.2:4040/jobs/job?id=410","http://172.17.0.2:4040/jobs/job?id=411","http://172.17.0.2:4040/jobs/job?id=412","http://172.17.0.2:4040/jobs/job?id=413","http://172.17.0.2:4040/jobs/job?id=414","http://172.17.0.2:4040/jobs/job?id=415","http://172.17.0.2:4040/jobs/job?id=416","http://172.17.0.2:4040/jobs/job?id=417","http://172.17.0.2:4040/jobs/job?id=418","http://172.17.0.2:4040/jobs/job?id=419","http://172.17.0.2:4040/jobs/job?id=420","http://172.17.0.2:4040/jobs/job?id=421","http://172.17.0.2:4040/jobs/job?id=422","http://172.17.0.2:4040/jobs/job?id=423","http://172.17.0.2:4040/jobs/job?id=424"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1592309146757_-232986885","id":"20200522-130302_597846835","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:13:02+0000","dateFinished":"2020-06-16T12:18:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:185"},{"title":"Evaluate model","text":"validatorModel.validationMetrics.max\nmulticlassEval.evaluate(bestModel.transform(testData))","user":"anonymous","dateUpdated":"2020-06-16T12:18:04+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res14: Double = 0.7445214979195561\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=425","http://172.17.0.2:4040/jobs/job?id=426"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1592309146757_-225863314","id":"20200522-130317_1229157620","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:18:04+0000","dateFinished":"2020-06-16T12:18:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:186"},{"title":"Categorical features","text":"import org.apache.spark.sql.functions._\nimport org.apache.spark.mllib.linalg.Vector\n\ndef unencodeOneHot(data: DataFrame): DataFrame = {\n val wildernessCols = (0 until 4).map(i => s\"Wilderness_Area_$i\").toArray\n val wildernessAssembler = new VectorAssembler().setInputCols(wildernessCols).setOutputCol(\"wilderness\")\n val unhotUDF = udf((vec: Vector) => vec.toArray.indexOf(1.0).toDouble)\n val withWilderness = wildernessAssembler.transform(data).drop(wildernessCols:_*).withColumn(\"wilderness\", unhotUDF($\"wilderness\"))\n val soilCols = (0 until 40).map(i => s\"Soil_Type_$i\").toArray\n val soilAssembler = new VectorAssembler().setInputCols(soilCols).setOutputCol(\"soil\")\n \n soilAssembler.transform(withWilderness).drop(soilCols:_*).withColumn(\"soil\", unhotUDF($\"soil\"))\n}","user":"anonymous","dateUpdated":"2020-06-16T12:18:07+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions._\nimport org.apache.spark.mllib.linalg.Vector\nunencodeOneHot: (data: org.apache.spark.sql.DataFrame)org.apache.spark.sql.DataFrame\n"}]},"apps":[],"jobName":"paragraph_1592309146757_-135988645","id":"20200522-130636_865101410","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:18:07+0000","dateFinished":"2020-06-16T12:18:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:187"},{"title":"Add stages to pipeline","text":"import org.apache.spark.ml.feature.VectorIndexer\n\nval inputCols = trainData.columns.filter(_ != \"Cover_Type\")\nval assembler = new VectorAssembler().setInputCols(inputCols).setOutputCol(\"featureVector\")\nval indexer = new VectorIndexer().setMaxCategories(40).setInputCol(\"featureVector\").setOutputCol(\"indexedVector\")\nval classifier = new RandomForestClassifier().setSeed(Random.nextLong()).setLabelCol(\"Cover_Type\").setFeaturesCol(\"indexedVector\").setPredictionCol(\"prediction\")\nval pipeline = new Pipeline().setStages(Array(assembler, indexer, classifier))","user":"anonymous","dateUpdated":"2020-06-16T12:18:07+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.feature.VectorIndexer\ninputCols: Array[String] = Array(Elevation, Aspect, Slope, Horizontal_Distance_To_Hydrology, Vertical_Distance_To_Hydrology, Horizontal_Distance_To_Roadways, Hillshade_9am, Hillshade_Noon, Hillshade_3pm, Horizontal_Distance_To_Fire_Points, Wilderness_Area_0, Wilderness_Area_1, Wilderness_Area_2, Wilderness_Area_3, Soil_Type_0, Soil_Type_1, Soil_Type_2, Soil_Type_3, Soil_Type_4, Soil_Type_5, Soil_Type_6, Soil_Type_7, Soil_Type_8, Soil_Type_9, Soil_Type_10, Soil_Type_11, Soil_Type_12, Soil_Type_13, Soil_Type_14, Soil_Type_15, Soil_Type_16, Soil_Type_17, Soil_Type_18, Soil_Type_19, Soil_Type_20, Soil_Type_21, Soil_Type_22, Soil_Type_23, Soil_Type_24, Soil_Type_25, Soil_Type_26, Soil_Type_27, Soil_Type_28, Soil_Type_29, Soil_Type_30, Soil_Typ..."}]},"apps":[],"jobName":"paragraph_1592309146758_1045355398","id":"20200522-131431_1618000656","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:18:07+0000","dateFinished":"2020-06-16T12:18:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:188"},{"title":"Features importances","text":"import org.apache.spark.ml.classification.RandomForestClassificationModel\n\nval forestModel = bestModel.asInstanceOf[PipelineModel].stages.last.asInstanceOf[RandomForestClassificationModel]\nforestModel.featureImportances.toArray.zip(inputCols).sorted.reverse.foreach(println)","user":"anonymous","dateUpdated":"2020-06-16T12:18:07+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"(0.43640114880353176,Elevation)\n(0.07988202028653386,Wilderness_Area_3)\n(0.04623726723476672,Horizontal_Distance_To_Roadways)\n(0.0423070516254828,Soil_Type_21)\n(0.037932720363981993,Horizontal_Distance_To_Fire_Points)\n(0.03205258596784778,Soil_Type_3)\n(0.03183623728860403,Soil_Type_9)\n(0.03065776076827468,Soil_Type_37)\n(0.02630148383536445,Wilderness_Area_0)\n(0.021998592611227896,Soil_Type_22)\n(0.019444589181033006,Horizontal_Distance_To_Hydrology)\n(0.01885613447681277,Wilderness_Area_2)\n(0.01784122932334076,Soil_Type_38)\n(0.01562539880286646,Soil_Type_11)\n(0.014768217212699853,Soil_Type_39)\n(0.014510673535936533,Soil_Type_1)\n(0.014351172944621671,Aspect)\n(0.014291670361232764,Hillshade_Noon)\n(0.012515679281103914,Vertical_Distance_To_Hydrology)\n(0.009686295297920745,Slope)\n(0.009312772578044491,Hillshade_9am)\n(0.008643139174359332,Hillshade_3pm)\n(0.006449502121459384,Soil_Type_28)\n(0.005774055595661878,Wilderness_Area_1)\n(0.005249549019411855,Soil_Type_12)\n(0.005174516965007514,Soil_Type_31)\n(0.0032041515401984113,Soil_Type_2)\n(0.0026633947085145764,Soil_Type_5)\n(0.002521991149265239,Soil_Type_29)\n(0.001999984597231796,Soil_Type_0)\n(0.0019328100601128807,Soil_Type_10)\n(0.001771082472311273,Soil_Type_30)\n(0.001555230800968962,Soil_Type_32)\n(0.0010743923358930581,Soil_Type_23)\n(9.19030267834594E-4,Soil_Type_34)\n(8.754024895889008E-4,Soil_Type_16)\n(7.095155147585025E-4,Soil_Type_20)\n(5.864609765942519E-4,Soil_Type_36)\n(5.541427718272137E-4,Soil_Type_19)\n(3.545270817583002E-4,Soil_Type_4)\n(3.240820065900887E-4,Soil_Type_18)\n(2.9234162445417424E-4,Soil_Type_13)\n(1.821730799855601E-4,Soil_Type_15)\n(1.2477850852792407E-4,Soil_Type_17)\n(7.030246961338669E-5,Soil_Type_24)\n(5.184323953926482E-5,Soil_Type_26)\n(4.749966176898655E-5,Soil_Type_27)\n(3.999265445420588E-5,Soil_Type_33)\n(2.31796473386636E-5,Soil_Type_35)\n(1.1131605276360437E-5,Soil_Type_25)\n(9.050649652463916E-6,Soil_Type_8)\n(4.34288120848565E-8,Soil_Type_7)\n(0.0,Soil_Type_6)\n(0.0,Soil_Type_14)\nimport org.apache.spark.ml.classification.RandomForestClassificationModel\nforestModel: org.apache.spark.ml.classification.RandomForestClassificationModel = RandomForestClassificationModel (uid=rfc_9c4915d22fd5) with 20 trees\n"}]},"apps":[],"jobName":"paragraph_1592309146758_1279920083","id":"20200522-132049_1486163842","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:18:07+0000","dateFinished":"2020-06-16T12:18:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189"},{"title":"Make prediction","text":"bestModel.transform(testData.drop(\"Cover_Type\")).select(\"prediction\").show()","user":"anonymous","dateUpdated":"2020-06-16T12:05:46+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+\n|prediction|\n+----------+\n|       3.0|\n|       3.0|\n|       3.0|\n|       3.0|\n|       3.0|\n|       3.0|\n|       3.0|\n|       3.0|\n|       3.0|\n|       3.0|\n|       3.0|\n|       3.0|\n|       3.0|\n|       3.0|\n|       3.0|\n|       3.0|\n|       6.0|\n|       3.0|\n|       3.0|\n|       3.0|\n+----------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1592309146758_45190161","id":"20200522-140406_911256316","dateCreated":"2020-06-16T12:05:46+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:190"},{"title":"Accuracy comparison with different feature number","text":"import scala.collection.mutable.ListBuffer\nimport org.apache.spark.ml.feature.VectorIndexer\nimport org.apache.spark.ml.tuning.TrainValidationSplit\n\nval accuracies = new ListBuffer[DataFrame]()\n\nval mostImportantFeatures = forestModel.featureImportances.toArray.zip(inputCols).sorted.reverse.map{ case (x, y) => y }\n    \nval params = new ParamGridBuilder()\n .addGrid(classifier.impurity, Seq(\"entropy\"))\n .addGrid(classifier.maxDepth, Seq(10))\n .addGrid(classifier.maxBins, Seq(40))\n .addGrid(classifier.minInfoGain, Seq(0.0))\n .build()\n\nval seed = 42\n\n1.to(mostImportantFeatures.size).by(5).par.foreach( i => {\n    \n    val featuresToKeep = i\n    val keptFeatures = mostImportantFeatures.take(featuresToKeep)\n    \n    val assembler = new VectorAssembler().setInputCols(keptFeatures).setOutputCol(\"featureVector\")\n    val indexer = new VectorIndexer().setMaxCategories(40).setInputCol(\"featureVector\").setOutputCol(\"indexedVector\")\n    val classifier = new RandomForestClassifier().setSeed(seed).setLabelCol(\"Cover_Type\").setFeaturesCol(\"indexedVector\").setPredictionCol(\"prediction\")\n    val pipeline = new Pipeline().setStages(Array(assembler, indexer, classifier))\n    \n    val validator = new TrainValidationSplit()\n     .setSeed(seed)\n     .setEstimator(pipeline)\n     .setEvaluator(multiclassEval)\n     .setEstimatorParamMaps(params)\n     .setTrainRatio(0.9)\n     \n    val validatorModel = validator.fit(trainData)\n    val bestModel = validatorModel.bestModel\n    validatorModel.validationMetrics.max\n\n    val df1 = Seq((i, multiclassEval.evaluate(bestModel.transform(testData)))).toDF(\"index\", \"accuracy\")\n\n    accuracies += df1\n})\n\nprint(accuracies)\n\nval df_united: DataFrame = accuracies.reduce(_ union _)\n\nz.show(df_united)\n ","user":"anonymous","dateUpdated":"2020-06-16T13:37:21+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{"1":{"graph":{"mode":"lineChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"index","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"accuracy","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"index":"string","accuracy":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"index","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"accuracy","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"ListBuffer([index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double])\n"},{"type":"TABLE","data":"index\taccuracy\n16\t0.6825299145299145\n11\t0.6833333333333333\n21\t0.6768376068376069\n31\t0.6712136752136753\n6\t0.6888547008547009\n36\t0.6713333333333333\n26\t0.6821709401709402\n41\t0.6771452991452992\n1\t0.6702051282051282\n46\t0.6746324786324787\n51\t0.6757094017094017\n"},{"type":"TEXT","data":"import scala.collection.mutable.ListBuffer\nimport org.apache.spark.ml.feature.VectorIndexer\nimport org.apache.spark.ml.tuning.TrainValidationSplit\naccuracies: scala.collection.mutable.ListBuffer[org.apache.spark.sql.DataFrame] = ListBuffer([index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double], [index: int, accuracy: double])\nmostImportantFeatures: Array[String] = Array(Elevation, Wilderness_Area_3, Horizontal_Distance_To_Roadways, Soil_Type_3, Soil_Type_11, Horizontal_Distance_To_Fire_Points, Soil_Type_21, Soil_Type_38, Horizo..."}]},"apps":[],"jobName":"paragraph_1592309146758_698732931","id":"20200522-140423_626673473","dateCreated":"2020-06-16T12:05:46+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:191"},{"title":"Accuracy comparison with different data size","text":"import scala.collection.mutable.ListBuffer\nimport org.apache.spark.ml.feature.VectorIndexer\nimport org.apache.spark.ml.tuning.TrainValidationSplit\n\n\nval accuracies = new ListBuffer[DataFrame]()\n\nval mostImportantFeatures = forestModel.featureImportances.toArray.zip(inputCols).sorted.reverse.map{ case (x, y) => y }\n    \nval params = new ParamGridBuilder()\n .addGrid(classifier.impurity, Seq(\"entropy\"))\n .addGrid(classifier.maxDepth, Seq(10))\n .addGrid(classifier.maxBins, Seq(40))\n .addGrid(classifier.minInfoGain, Seq(0.0))\n .build()\n\nval seed = 42\n\nval percentages = Array(0.2, 0.4, 0.6, 0.8, 0.9)\n\npercentages.par.foreach( i => {\n    \n    \n    val Array(subTrainData, subTestData) = data.randomSplit(Array(i, 1 - i))\n\n    val assembler = new VectorAssembler().setInputCols(mostImportantFeatures).setOutputCol(\"featureVector\")\n    val indexer = new VectorIndexer().setMaxCategories(40).setInputCol(\"featureVector\").setOutputCol(\"indexedVector\")\n    val classifier = new RandomForestClassifier().setSeed(seed).setLabelCol(\"Cover_Type\").setFeaturesCol(\"indexedVector\").setPredictionCol(\"prediction\")\n    val pipeline = new Pipeline().setStages(Array(assembler, indexer, classifier))\n    \n    val validator = new TrainValidationSplit()\n     .setSeed(seed)\n     .setEstimator(pipeline)\n     .setEvaluator(multiclassEval)\n     .setEstimatorParamMaps(params)\n     .setTrainRatio(0.9)\n     \n    val validatorModel = validator.fit(subTrainData)\n    val bestModel = validatorModel.bestModel\n    validatorModel.validationMetrics.max\n\n    val df1 = Seq((i, multiclassEval.evaluate(bestModel.transform(subTestData)))).toDF(\"index\", \"accuracy\")\n\n    accuracies += df1\n})\n\nprint(accuracies)\n\nval df_united: DataFrame = accuracies.reduce(_ union _).sort($\"index\")\n\nz.show(df_united)","user":"anonymous","dateUpdated":"2020-06-16T13:37:21+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{"1":{"graph":{"mode":"lineChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"index","visible":true,"width":"*","sort":{"priority":0,"direction":"asc"},"filters":[{}],"pinned":""},{"name":"accuracy","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"index":"string","accuracy":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"index","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"accuracy","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"ListBuffer([index: double, accuracy: double], [index: double, accuracy: double], [index: double, accuracy: double], [index: double, accuracy: double], [index: double, accuracy: double])\n"},{"type":"TABLE","data":"index\taccuracy\n0.2\t0.67494404705852\n0.4\t0.6729549828070286\n0.6\t0.6693298415833083\n0.8\t0.6760738312920476\n0.9\t0.6727669662806365\n"},{"type":"TEXT","data":"import scala.collection.mutable.ListBuffer\nimport org.apache.spark.ml.feature.VectorIndexer\nimport org.apache.spark.ml.tuning.TrainValidationSplit\naccuracies: scala.collection.mutable.ListBuffer[org.apache.spark.sql.DataFrame] = ListBuffer([index: double, accuracy: double], [index: double, accuracy: double], [index: double, accuracy: double], [index: double, accuracy: double], [index: double, accuracy: double])\nmostImportantFeatures: Array[String] = Array(Elevation, Wilderness_Area_3, Horizontal_Distance_To_Roadways, Soil_Type_21, Horizontal_Distance_To_Fire_Points, Soil_Type_3, Soil_Type_9, Soil_Type_37, Wilderness_Area_0, Soil_Type_22, Horizontal_Distance_To_Hydrology, Wilderness_Area_2, Soil_Type_38, Soil_Type_11, Soil_Type_39, Soil_Type_1, Aspect, Hillshade_Noon, Vertical_Distance_T..."}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=439","http://172.17.0.2:4040/jobs/job?id=440","http://172.17.0.2:4040/jobs/job?id=441","http://172.17.0.2:4040/jobs/job?id=442","http://172.17.0.2:4040/jobs/job?id=443","http://172.17.0.2:4040/jobs/job?id=444","http://172.17.0.2:4040/jobs/job?id=445","http://172.17.0.2:4040/jobs/job?id=446","http://172.17.0.2:4040/jobs/job?id=447","http://172.17.0.2:4040/jobs/job?id=448","http://172.17.0.2:4040/jobs/job?id=449","http://172.17.0.2:4040/jobs/job?id=450","http://172.17.0.2:4040/jobs/job?id=451","http://172.17.0.2:4040/jobs/job?id=452","http://172.17.0.2:4040/jobs/job?id=453","http://172.17.0.2:4040/jobs/job?id=454","http://172.17.0.2:4040/jobs/job?id=455","http://172.17.0.2:4040/jobs/job?id=456","http://172.17.0.2:4040/jobs/job?id=457","http://172.17.0.2:4040/jobs/job?id=458","http://172.17.0.2:4040/jobs/job?id=459","http://172.17.0.2:4040/jobs/job?id=460","http://172.17.0.2:4040/jobs/job?id=461","http://172.17.0.2:4040/jobs/job?id=462","http://172.17.0.2:4040/jobs/job?id=463","http://172.17.0.2:4040/jobs/job?id=464","http://172.17.0.2:4040/jobs/job?id=465","http://172.17.0.2:4040/jobs/job?id=466","http://172.17.0.2:4040/jobs/job?id=467","http://172.17.0.2:4040/jobs/job?id=468","http://172.17.0.2:4040/jobs/job?id=469","http://172.17.0.2:4040/jobs/job?id=470","http://172.17.0.2:4040/jobs/job?id=471","http://172.17.0.2:4040/jobs/job?id=472","http://172.17.0.2:4040/jobs/job?id=473","http://172.17.0.2:4040/jobs/job?id=474","http://172.17.0.2:4040/jobs/job?id=475","http://172.17.0.2:4040/jobs/job?id=476","http://172.17.0.2:4040/jobs/job?id=477","http://172.17.0.2:4040/jobs/job?id=478","http://172.17.0.2:4040/jobs/job?id=479","http://172.17.0.2:4040/jobs/job?id=480","http://172.17.0.2:4040/jobs/job?id=481","http://172.17.0.2:4040/jobs/job?id=482","http://172.17.0.2:4040/jobs/job?id=483","http://172.17.0.2:4040/jobs/job?id=484","http://172.17.0.2:4040/jobs/job?id=485","http://172.17.0.2:4040/jobs/job?id=486","http://172.17.0.2:4040/jobs/job?id=487","http://172.17.0.2:4040/jobs/job?id=488","http://172.17.0.2:4040/jobs/job?id=489","http://172.17.0.2:4040/jobs/job?id=490","http://172.17.0.2:4040/jobs/job?id=491","http://172.17.0.2:4040/jobs/job?id=492","http://172.17.0.2:4040/jobs/job?id=493","http://172.17.0.2:4040/jobs/job?id=494","http://172.17.0.2:4040/jobs/job?id=495","http://172.17.0.2:4040/jobs/job?id=496","http://172.17.0.2:4040/jobs/job?id=497","http://172.17.0.2:4040/jobs/job?id=498","http://172.17.0.2:4040/jobs/job?id=499","http://172.17.0.2:4040/jobs/job?id=500","http://172.17.0.2:4040/jobs/job?id=501","http://172.17.0.2:4040/jobs/job?id=502","http://172.17.0.2:4040/jobs/job?id=503","http://172.17.0.2:4040/jobs/job?id=504","http://172.17.0.2:4040/jobs/job?id=505","http://172.17.0.2:4040/jobs/job?id=506","http://172.17.0.2:4040/jobs/job?id=507","http://172.17.0.2:4040/jobs/job?id=508","http://172.17.0.2:4040/jobs/job?id=509","http://172.17.0.2:4040/jobs/job?id=510","http://172.17.0.2:4040/jobs/job?id=511","http://172.17.0.2:4040/jobs/job?id=512","http://172.17.0.2:4040/jobs/job?id=513","http://172.17.0.2:4040/jobs/job?id=514","http://172.17.0.2:4040/jobs/job?id=515","http://172.17.0.2:4040/jobs/job?id=516","http://172.17.0.2:4040/jobs/job?id=517","http://172.17.0.2:4040/jobs/job?id=518","http://172.17.0.2:4040/jobs/job?id=519","http://172.17.0.2:4040/jobs/job?id=520","http://172.17.0.2:4040/jobs/job?id=521","http://172.17.0.2:4040/jobs/job?id=522","http://172.17.0.2:4040/jobs/job?id=523","http://172.17.0.2:4040/jobs/job?id=524","http://172.17.0.2:4040/jobs/job?id=525","http://172.17.0.2:4040/jobs/job?id=526","http://172.17.0.2:4040/jobs/job?id=527","http://172.17.0.2:4040/jobs/job?id=528","http://172.17.0.2:4040/jobs/job?id=529","http://172.17.0.2:4040/jobs/job?id=530","http://172.17.0.2:4040/jobs/job?id=531","http://172.17.0.2:4040/jobs/job?id=532","http://172.17.0.2:4040/jobs/job?id=533","http://172.17.0.2:4040/jobs/job?id=534","http://172.17.0.2:4040/jobs/job?id=535","http://172.17.0.2:4040/jobs/job?id=536","http://172.17.0.2:4040/jobs/job?id=537","http://172.17.0.2:4040/jobs/job?id=538","http://172.17.0.2:4040/jobs/job?id=539","http://172.17.0.2:4040/jobs/job?id=540","http://172.17.0.2:4040/jobs/job?id=541","http://172.17.0.2:4040/jobs/job?id=542","http://172.17.0.2:4040/jobs/job?id=543","http://172.17.0.2:4040/jobs/job?id=544","http://172.17.0.2:4040/jobs/job?id=545","http://172.17.0.2:4040/jobs/job?id=546","http://172.17.0.2:4040/jobs/job?id=547","http://172.17.0.2:4040/jobs/job?id=548","http://172.17.0.2:4040/jobs/job?id=549","http://172.17.0.2:4040/jobs/job?id=550","http://172.17.0.2:4040/jobs/job?id=551","http://172.17.0.2:4040/jobs/job?id=552","http://172.17.0.2:4040/jobs/job?id=553","http://172.17.0.2:4040/jobs/job?id=554","http://172.17.0.2:4040/jobs/job?id=555","http://172.17.0.2:4040/jobs/job?id=556","http://172.17.0.2:4040/jobs/job?id=557","http://172.17.0.2:4040/jobs/job?id=558","http://172.17.0.2:4040/jobs/job?id=559","http://172.17.0.2:4040/jobs/job?id=560","http://172.17.0.2:4040/jobs/job?id=561","http://172.17.0.2:4040/jobs/job?id=562","http://172.17.0.2:4040/jobs/job?id=563","http://172.17.0.2:4040/jobs/job?id=564","http://172.17.0.2:4040/jobs/job?id=565","http://172.17.0.2:4040/jobs/job?id=566","http://172.17.0.2:4040/jobs/job?id=567","http://172.17.0.2:4040/jobs/job?id=568","http://172.17.0.2:4040/jobs/job?id=569","http://172.17.0.2:4040/jobs/job?id=570","http://172.17.0.2:4040/jobs/job?id=571","http://172.17.0.2:4040/jobs/job?id=572","http://172.17.0.2:4040/jobs/job?id=573","http://172.17.0.2:4040/jobs/job?id=574","http://172.17.0.2:4040/jobs/job?id=575","http://172.17.0.2:4040/jobs/job?id=576","http://172.17.0.2:4040/jobs/job?id=577","http://172.17.0.2:4040/jobs/job?id=578","http://172.17.0.2:4040/jobs/job?id=579"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1592309146759_-837001153","id":"20200608-104540_757882285","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T13:24:14+0000","dateFinished":"2020-06-16T13:33:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:192"},{"text":"val test = df_united.sort($\"index\")\nz.show(test)","user":"anonymous","dateUpdated":"2020-06-16T13:37:21+0000","config":{"lineNumbers":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"index":"string","accuracy":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"index","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"accuracy","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"index\taccuracy\n0.2\t0.6853026010927082\n0.4\t0.67636883316245\n0.6\t0.6766666953077339\n0.8\t0.684748597091605\n0.9\t0.6786819306930693\n"},{"type":"TEXT","data":"test: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [index: double, accuracy: double]\n"}]},"apps":[],"jobName":"paragraph_1592309146759_-557878118","id":"20200610-082833_263992212","dateCreated":"2020-06-16T12:05:46+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:193"},{"title":"Displaying class probabilities","text":"val trainPriorProbabilities = classProbabilities(trainData)\nval testPriorProbabilities = classProbabilities(testData)\n\nval probabilities = new ListBuffer[DataFrame]()\n\nfor ((value, i) <- trainPriorProbabilities.zipWithIndex) {\n   probabilities += Seq((i + 1, value)).toDF(\"index\", \"probability\")\n}\n\n\nval df_probabilities: DataFrame = probabilities.reduce(_ union _).sort($\"index\")\nz.show(df_probabilities)\n","user":"anonymous","dateUpdated":"2020-06-16T12:05:46+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"pieChart","height":424,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"index","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"probability","visible":true,"width":1008,"sort":{},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"index":"string","probability":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"index","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"probability","index":1,"aggr":"sum"}]},"helium":{}},"1":{"graph":{"mode":"table","height":115,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"index\tprobability\n1\t0.36477570036261264\n2\t0.4875667467372512\n3\t0.061521749108768495\n4\t0.004720084456616533\n5\t0.01622385593414832\n6\t0.029909805841582645\n7\t0.03528205755902018\n"},{"type":"TEXT","data":"trainPriorProbabilities: Array[Double] = Array(0.36477570036261264, 0.4875667467372512, 0.061521749108768495, 0.004720084456616533, 0.01622385593414832, 0.029909805841582645, 0.03528205755902018)\ntestPriorProbabilities: Array[Double] = Array(0.3630718954248366, 0.48789129686962507, 0.061678706570347436, 0.004798761609907121, 0.0173718610251118, 0.029721362229102165, 0.03546611627106983)\nprobabilities: scala.collection.mutable.ListBuffer[org.apache.spark.sql.DataFrame] = ListBuffer([index: int, probability: double], [index: int, probability: double], [index: int, probability: double], [index: int, probability: double], [index: int, probability: double], [index: int, probability: double], [index: int, probability: double])\ndf_probabilities: org.apache.spark.sql.DataFrame = [index: int, pr..."}]},"apps":[],"jobName":"paragraph_1592309146759_645555637","id":"20200610-122252_352348115","dateCreated":"2020-06-16T12:05:46+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:194"},{"text":"val features = new ListBuffer[DataFrame]()\n\nfor ((value, feature) <- featureImpact) {\n   features += Seq((feature, value)).toDF(\"Feature\", \"Value\")\n}\n\nval df_features: DataFrame = features.reduce(_ union _).sort($\"Value\".desc)\nz.show(df_features)","user":"anonymous","dateUpdated":"2020-06-16T13:37:21+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Feature":"string","Value":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default","stacked":false}},"commonSetting":{},"keys":[{"name":"Feature","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"Value","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Feature\tValue\nElevation\t0.3948520568363711\nWilderness_Area_3\t0.20417021991561576\nSoil_Type_21\t0.06384432949438083\nSoil_Type_11\t0.043576915851423884\nSoil_Type_3\t0.03554289508673363\nSoil_Type_9\t0.02777010214461728\nHorizontal_Distance_To_Fire_Points\t0.025919075280158407\nSoil_Type_38\t0.024129006871741868\nSoil_Type_1\t0.020706413060114368\nHorizontal_Distance_To_Roadways\t0.020537307623024335\nWilderness_Area_0\t0.02027330894207572\nWilderness_Area_2\t0.01877531639638002\nSoil_Type_22\t0.017983112277966024\nSoil_Type_37\t0.015644000624590662\nHillshade_Noon\t0.010111057801116843\nSoil_Type_39\t0.009589529899452396\nHorizontal_Distance_To_Hydrology\t0.007151842772282548\nSoil_Type_28\t0.006050475859209487\nSlope\t0.005993672433277247\nWilderness_Area_1\t0.0058993566250449365\nSoil_Type_2\t0.003842225119825041\nAspect\t0.0037789488527473804\nVertical_Distance_To_Hydrology\t0.003630396656204913\nHillshade_9am\t0.0018219360729273173\nSoil_Type_0\t0.001786045215238137\nSoil_Type_12\t0.0016452483302083123\nSoil_Type_10\t0.001574140653569461\nHillshade_3pm\t0.0013590813694707158\nSoil_Type_5\t7.789216104111677E-4\nSoil_Type_34\t5.54724844820896E-4\nSoil_Type_29\t2.7026167407066706E-4\nSoil_Type_16\t1.4824580069405647E-4\nSoil_Type_13\t1.2185766273595425E-4\nSoil_Type_33\t1.1610768083662835E-4\nSoil_Type_15\t5.1862660661938906E-5\nSoil_Type_8\t0.0\nSoil_Type_7\t0.0\nSoil_Type_24\t0.0\nSoil_Type_6\t0.0\nSoil_Type_36\t0.0\nSoil_Type_23\t0.0\nSoil_Type_4\t0.0\nSoil_Type_35\t0.0\nSoil_Type_30\t0.0\nSoil_Type_20\t0.0\nSoil_Type_18\t0.0\nSoil_Type_32\t0.0\nSoil_Type_27\t0.0\nSoil_Type_26\t0.0\nSoil_Type_19\t0.0\nSoil_Type_17\t0.0\nSoil_Type_14\t0.0\nSoil_Type_31\t0.0\nSoil_Type_25\t0.0\n"},{"type":"TEXT","data":"features: scala.collection.mutable.ListBuffer[org.apache.spark.sql.DataFrame] = ListBuffer([Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: double], [Feature: string, Value: d..."}]},"apps":[],"jobName":"paragraph_1592309146759_531056259","id":"20200610-133618_753261338","dateCreated":"2020-06-16T12:05:46+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:195"},{"text":"val subData = data.select(\"Elevation\", \"Wilderness_Area_3\").orderBy(rand())\nz.show(subData)","user":"anonymous","dateUpdated":"2020-06-16T12:35:58+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Elevation":"string","Wilderness_Area_3":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[],"groups":[],"values":[]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Elevation\tWilderness_Area_3\n2995\t0\n2833\t0\n2745\t0\n2867\t0\n2784\t0\n2885\t0\n2023\t1\n2680\t0\n2740\t0\n2940\t0\n3064\t0\n3224\t0\n2467\t0\n3092\t0\n2593\t0\n2914\t0\n3285\t0\n3277\t0\n3073\t0\n3036\t0\n2989\t0\n3129\t0\n3051\t0\n2934\t0\n3014\t0\n3211\t0\n2823\t0\n2949\t0\n3028\t0\n2977\t0\n3033\t0\n2739\t0\n3039\t0\n3086\t0\n2780\t0\n2445\t0\n2992\t0\n2600\t0\n2809\t0\n3252\t0\n3218\t0\n2981\t0\n3079\t0\n3208\t0\n3444\t0\n3098\t0\n2798\t0\n3194\t0\n2451\t0\n3092\t0\n3365\t0\n3132\t0\n2488\t0\n2855\t0\n3009\t0\n2821\t0\n2975\t0\n2581\t0\n3155\t0\n2806\t0\n2776\t0\n2739\t0\n2747\t0\n2692\t0\n2776\t0\n2922\t0\n2998\t0\n3286\t0\n2816\t0\n3071\t0\n2860\t0\n3424\t0\n3275\t0\n3177\t0\n3198\t0\n2873\t0\n3065\t0\n2919\t0\n3102\t0\n2642\t0\n3057\t0\n2506\t1\n2769\t0\n3292\t0\n3224\t0\n2968\t0\n3244\t0\n3047\t0\n3139\t0\n2770\t0\n3221\t0\n3066\t0\n1971\t1\n3375\t0\n3126\t0\n2080\t1\n3050\t0\n2524\t1\n3311\t0\n3204\t0\n3189\t0\n3379\t0\n3375\t0\n2592\t0\n3237\t0\n2991\t0\n3317\t0\n2701\t0\n3029\t0\n3176\t0\n2947\t0\n3229\t0\n2511\t0\n2953\t0\n2872\t0\n2785\t0\n2305\t1\n3116\t0\n2955\t0\n2002\t1\n2968\t0\n3169\t0\n2461\t0\n2204\t1\n3192\t0\n3233\t0\n3349\t0\n3250\t0\n3209\t0\n2922\t0\n2607\t0\n3353\t0\n2260\t1\n2825\t0\n2932\t0\n2958\t0\n3263\t0\n2575\t0\n3086\t0\n2791\t0\n2945\t0\n3294\t0\n2921\t0\n3140\t0\n3097\t0\n3162\t0\n3047\t0\n3203\t0\n2985\t0\n2773\t0\n2760\t0\n3057\t0\n3156\t0\n2965\t0\n2979\t0\n2975\t0\n3336\t0\n3056\t0\n2729\t0\n3126\t0\n2761\t0\n2715\t0\n2640\t0\n3298\t0\n3317\t0\n3201\t0\n2686\t0\n2911\t0\n2781\t0\n2561\t1\n3198\t0\n2987\t0\n2339\t1\n2578\t0\n2384\t1\n3173\t0\n3285\t0\n3278\t0\n3139\t0\n2668\t0\n3131\t0\n2644\t0\n2653\t0\n2549\t0\n2871\t0\n2921\t0\n2957\t0\n2978\t0\n3133\t0\n2203\t1\n3032\t0\n2500\t1\n2994\t0\n3020\t0\n3311\t0\n2808\t0\n3129\t0\n3236\t0\n2687\t0\n2872\t0\n3254\t0\n3291\t0\n3038\t0\n3002\t0\n3291\t0\n3038\t0\n2731\t0\n2714\t0\n2900\t0\n2524\t0\n2493\t0\n2975\t0\n2922\t0\n2990\t0\n3212\t0\n3358\t0\n2620\t0\n2360\t1\n3189\t0\n3135\t0\n3401\t0\n3088\t0\n3144\t0\n2827\t0\n3234\t0\n3187\t0\n3249\t0\n2723\t0\n2963\t0\n3250\t0\n3157\t0\n3431\t0\n3326\t0\n3182\t0\n2412\t1\n2684\t0\n2714\t0\n3155\t0\n2829\t0\n3037\t0\n3014\t0\n2874\t0\n2966\t0\n2962\t0\n2772\t0\n2960\t0\n2889\t0\n3134\t0\n2994\t0\n2174\t1\n2739\t0\n2825\t0\n3195\t0\n3250\t0\n3001\t0\n3328\t0\n3160\t0\n2489\t0\n2794\t0\n3172\t0\n2340\t1\n3320\t0\n3093\t0\n2579\t0\n2965\t0\n2790\t0\n2757\t0\n3070\t0\n3028\t0\n2876\t0\n2550\t0\n2665\t0\n2889\t0\n3234\t0\n2337\t1\n2553\t0\n3132\t0\n3252\t0\n2919\t0\n2397\t0\n2901\t0\n2684\t0\n2473\t1\n2871\t0\n3147\t0\n3056\t0\n3438\t0\n2677\t0\n3070\t0\n3344\t0\n3136\t0\n2926\t0\n3044\t0\n2838\t0\n2349\t1\n2900\t0\n3067\t0\n3217\t0\n2666\t0\n3004\t0\n2922\t0\n2898\t0\n2058\t1\n2998\t0\n2951\t0\n3139\t0\n3046\t0\n2903\t0\n2972\t0\n2919\t0\n2173\t1\n3002\t0\n2857\t0\n3180\t0\n3272\t0\n2976\t0\n3085\t0\n2949\t0\n2890\t0\n3023\t0\n3145\t0\n2610\t0\n3401\t0\n3266\t0\n3091\t0\n2954\t0\n3229\t0\n2887\t0\n3100\t0\n3158\t0\n2731\t0\n3399\t0\n2559\t0\n3275\t0\n3245\t0\n3430\t0\n3217\t0\n3178\t0\n2650\t0\n3379\t0\n2756\t0\n2943\t0\n2878\t0\n3397\t0\n2743\t0\n3227\t0\n3067\t0\n3199\t0\n3160\t0\n2903\t0\n3014\t0\n3475\t0\n2918\t0\n3129\t0\n2829\t0\n3078\t0\n3174\t0\n3253\t0\n2782\t0\n3100\t0\n3329\t0\n2708\t0\n3110\t0\n3263\t0\n2982\t0\n3040\t0\n2986\t0\n3216\t0\n2631\t0\n3200\t0\n2832\t0\n3246\t0\n3270\t0\n2980\t0\n2374\t1\n3180\t0\n3348\t0\n2807\t0\n3322\t0\n2993\t0\n3012\t0\n3174\t0\n2965\t0\n3255\t0\n2739\t0\n2888\t0\n1978\t1\n3008\t0\n3067\t0\n2959\t0\n2758\t0\n2870\t0\n3060\t0\n3165\t0\n3225\t0\n3104\t0\n2726\t0\n3209\t0\n2287\t1\n2673\t0\n2809\t0\n2837\t0\n2895\t0\n2854\t0\n3219\t0\n2583\t0\n2947\t0\n2780\t0\n2683\t0\n2978\t0\n2890\t0\n3212\t0\n2904\t0\n1922\t1\n3225\t0\n2964\t0\n2842\t0\n2893\t0\n2599\t0\n3122\t0\n3005\t0\n3188\t0\n3409\t0\n3060\t0\n3382\t0\n3033\t0\n3063\t0\n2794\t0\n3237\t0\n2721\t0\n3113\t0\n3130\t0\n3252\t0\n2455\t0\n3216\t0\n3198\t0\n2964\t0\n2920\t0\n3105\t0\n3138\t0\n3070\t0\n3042\t0\n2205\t1\n3177\t0\n3149\t0\n2968\t0\n2567\t0\n3423\t0\n2929\t0\n3013\t0\n3325\t0\n2988\t0\n2891\t0\n3072\t0\n2731\t0\n3110\t0\n3220\t0\n3001\t0\n2813\t0\n3263\t0\n3303\t0\n2282\t1\n2909\t0\n3055\t0\n2454\t1\n3279\t0\n2989\t0\n2942\t0\n2827\t0\n3111\t0\n3004\t0\n2288\t1\n3137\t0\n3453\t0\n2988\t0\n3127\t0\n2604\t0\n2507\t1\n2762\t0\n3151\t0\n2926\t0\n2518\t0\n3157\t0\n2482\t0\n3047\t0\n2756\t0\n2791\t0\n3283\t0\n2854\t0\n2794\t0\n3382\t0\n2541\t0\n3313\t0\n3340\t0\n3066\t0\n3136\t0\n2275\t1\n3240\t0\n3039\t0\n2680\t0\n2946\t0\n3313\t0\n2860\t0\n2891\t0\n3132\t0\n3194\t0\n2962\t0\n2881\t0\n3256\t0\n2874\t0\n2979\t0\n2427\t1\n2865\t0\n3143\t0\n2669\t0\n3022\t0\n3411\t0\n2305\t1\n2320\t1\n2338\t1\n3096\t0\n2693\t0\n2855\t0\n2885\t0\n3131\t0\n1962\t1\n3170\t0\n2909\t0\n2825\t0\n2821\t0\n3192\t0\n2844\t0\n2603\t0\n2526\t0\n2598\t0\n2341\t1\n3250\t0\n3195\t0\n3058\t0\n2920\t0\n3158\t0\n3044\t0\n3161\t0\n3106\t0\n3106\t0\n3060\t0\n2472\t1\n2978\t0\n3030\t0\n2371\t1\n2955\t0\n3309\t0\n2699\t0\n2916\t0\n2731\t0\n3302\t0\n2505\t1\n2958\t0\n3185\t0\n3044\t0\n3047\t0\n2897\t0\n2999\t0\n3073\t0\n2818\t0\n2982\t0\n2766\t0\n3281\t0\n3174\t0\n2614\t0\n3079\t0\n2926\t0\n2701\t0\n3191\t0\n2828\t0\n3236\t0\n2895\t0\n2646\t0\n2838\t0\n3004\t0\n3376\t0\n2854\t0\n2945\t0\n3273\t0\n2756\t0\n2517\t0\n2705\t0\n2657\t0\n3018\t0\n2725\t0\n2353\t1\n2760\t0\n3206\t0\n3003\t0\n2775\t0\n3170\t0\n3216\t0\n3185\t0\n2778\t0\n3382\t0\n3106\t0\n3035\t0\n3221\t0\n2975\t0\n3244\t0\n2559\t0\n3383\t0\n2786\t0\n2860\t0\n3067\t0\n3248\t0\n2950\t0\n3070\t0\n3215\t0\n3273\t0\n3139\t0\n3183\t0\n2931\t0\n3080\t0\n3154\t0\n3264\t0\n3031\t0\n2840\t0\n2657\t0\n3113\t0\n3102\t0\n2920\t0\n3558\t0\n3128\t0\n3117\t0\n3306\t0\n2495\t1\n3039\t0\n2783\t0\n3089\t0\n3044\t0\n3321\t0\n3296\t0\n3132\t0\n3144\t0\n2748\t0\n2667\t0\n3254\t0\n2644\t0\n3137\t0\n2839\t0\n3381\t0\n2959\t0\n3195\t0\n2905\t0\n3106\t0\n3130\t0\n3080\t0\n3137\t0\n3180\t0\n2103\t1\n2899\t0\n2686\t0\n3210\t0\n3073\t0\n2945\t0\n2917\t0\n3273\t0\n3141\t0\n3154\t0\n2678\t0\n2953\t0\n3245\t0\n3090\t0\n2929\t0\n2819\t0\n2290\t1\n2546\t0\n2542\t0\n2811\t0\n2719\t0\n3225\t0\n2978\t0\n2643\t0\n3140\t0\n3084\t0\n2875\t0\n2968\t0\n3357\t0\n3088\t0\n3356\t0\n2731\t0\n3305\t0\n2811\t0\n3153\t0\n2982\t0\n2865\t0\n3181\t0\n2992\t0\n2971\t0\n2708\t0\n2554\t0\n2875\t0\n2643\t0\n3045\t0\n2525\t0\n2985\t0\n2959\t0\n3414\t0\n3257\t0\n3313\t0\n3077\t0\n2642\t0\n3224\t0\n3305\t0\n3101\t0\n2696\t0\n2642\t0\n3085\t0\n3082\t0\n2651\t0\n2919\t0\n3289\t0\n2968\t0\n3184\t0\n3023\t0\n2943\t0\n2982\t0\n2591\t0\n3279\t0\n1995\t1\n2382\t1\n2579\t0\n2718\t0\n2403\t1\n2597\t0\n2967\t0\n3109\t0\n2968\t0\n2502\t0\n2714\t0\n3078\t0\n2942\t0\n2890\t0\n3117\t0\n3070\t0\n2659\t0\n2735\t0\n2725\t0\n2768\t0\n3394\t0\n3000\t0\n3258\t0\n3178\t0\n2352\t1\n3138\t0\n3111\t0\n2861\t0\n2828\t0\n3165\t0\n3300\t0\n2756\t0\n2909\t0\n2308\t1\n2931\t0\n2577\t0\n3044\t0\n3051\t0\n3123\t0\n2871\t0\n2699\t0\n2950\t0\n2949\t0\n3010\t0\n2560\t1\n2851\t0\n3276\t0\n2423\t1\n2842\t0\n2637\t0\n3244\t0\n3375\t0\n3341\t0\n2929\t0\n3019\t0\n3198\t0\n3054\t0\n3107\t0\n2907\t0\n3075\t0\n3182\t0\n3185\t0\n3167\t0\n2886\t0\n2925\t0\n3271\t0\n2732\t0\n2603\t0\n2936\t0\n3075\t0\n3306\t0\n2863\t0\n3143\t0\n2954\t0\n2918\t0\n2704\t0\n3196\t0\n3291\t0\n2971\t0\n3407\t0\n2961\t0\n2311\t1\n3210\t0\n3016\t0\n2905\t0\n3017\t0\n3123\t0\n2470\t1\n2703\t0\n2710\t0\n2955\t0\n3078\t0\n3145\t0\n3289\t0\n2874\t0\n2978\t0\n2611\t0\n2955\t0\n3022\t0\n3269\t0\n2618\t0\n2683\t0\n2943\t0\n2140\t1\n2815\t0\n3068\t0\n3234\t0\n2883\t0\n3075\t0\n2592\t0\n3149\t0\n3106\t0\n3260\t0\n3089\t0\n3066\t0\n2562\t0\n2601\t0\n2993\t0\n3332\t0\n3373\t0\n3046\t0\n2977\t0\n2942\t0\n3240\t0\n3138\t0\n3035\t0\n3091\t0\n2778\t0\n3194\t0\n2525\t0\n3159\t0\n2755\t0\n2651\t0\n3101\t0\n2705\t0\n2845\t0\n3131\t0\n3203\t0\n2926\t0\n3308\t0\n2508\t0\n2216\t1\n2932\t0\n2919\t0\n2260\t1\n3175\t0\n3198\t0\n2746\t0\n2641\t0\n3265\t0\n2726\t0\n2541\t0\n3201\t0\n2656\t0\n2867\t0\n3181\t0\n3279\t0\n3090\t0\n3165\t0\n2314\t1\n2712\t0\n2828\t0\n2791\t0\n2667\t0\n3089\t0\n3056\t0\n2699\t0\n2936\t0\n3046\t0\n2981\t0\n2755\t0\n3219\t0\n2999\t0\n2025\t1\n2390\t0\n2821\t0\n2828\t0\n2932\t0\n3193\t0\n3245\t0\n2810\t0\n2757\t0\n2999\t0\n3197\t0\n3201\t0\n3140\t0\n2923\t0\n2818\t0\n3245\t0\n2950\t0\n3278\t0\n3252\t0\n2919\t0\n2837\t0\n2755\t0\n3198\t0\n3302\t0\n2300\t1\n2636\t0\n3041\t0\n2821\t0\n2875\t0\n2295\t1\n2777\t0\n2935\t0\n3196\t0\n2908\t0\n2883\t0\n3064\t0\n2922\t0\n2913\t0\n3174\t0\n3255\t0\n2804\t0\n2413\t1\n3029\t0\n3091\t0\n3340\t0\n2730\t0\n2303\t1\n3122\t0\n3311\t0\n2857\t0\n2827\t0\n2944\t0\n2690\t0\n3146\t0\n3230\t0\n3228\t0\n2572\t0\n2920\t0\n2436\t0\n3178\t0\n3155\t0\n2848\t0\n2630\t0\n3064\t0\n3126\t0\n3246\t0\n3312\t0\n2508\t0\n2916\t0\n2785\t0\n3179\t0\n2802\t0\n2901\t0\n2977\t0\n2982\t0\n2638\t0\n2751\t0\n2924\t0\n2904\t0\n2978\t0\n3046\t0\n2691\t0\n3129\t0\n2969\t0\n2729\t0\n2983\t0\n3182\t0\n2600\t0\n2432\t1\n2745\t0\n3279\t0\n3222\t0\n3132\t0\n3149\t0\n2928\t0\n2906\t0\n3191\t0\n3279\t0\n2640\t0\n3106\t0\n2260\t1\n3367\t0\n"},{"type":"HTML","data":"<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><strong>Output is truncated</strong> to 1000 rows. Learn more about <strong>zeppelin.spark.maxResult</strong></div>\n"},{"type":"TEXT","data":"subData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [Elevation: int, Wilderness_Area_3: int]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=438"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1592309146760_1770830968","id":"20200610-134635_525353370","dateCreated":"2020-06-16T12:05:46+0000","dateStarted":"2020-06-16T12:35:54+0000","dateFinished":"2020-06-16T12:35:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:196"},{"text":"%python\nimport pandas as pd\n\n\ncolNames = [\"Elevation\", \"Aspect\", \"Slope\",\n \"Horizontal_Distance_To_Hydrology\", \"Vertical_Distance_To_Hydrology\",\n \"Horizontal_Distance_To_Roadways\",\n \"Hillshade_9am\", \"Hillshade_Noon\", \"Hillshade_3pm\",\n \"Horizontal_Distance_To_Fire_Points\"\n ] + [i for i in map(lambda i : \"Wilderness_Area_{}\".format(i), range(4))] + [i for i in map(lambda i: \"Soil_Type_{}\".format(i), range(40))] + [\"Cover_Type\"]\n \ndata = pd.read_csv('/data/covtype.data.gz', names=colNames)\n\n#subData = data[[\"Elevation\", \"Wilderness_Area_3\"]]\n#subData.head\n\nplt = data.plot.scatter(x='Cover_Type',\n                      y='Elevation',\n                      c='Cover_Type',\n                      colormap='viridis')\nz.show(plt)","user":"anonymous","dateUpdated":"2020-06-16T13:10:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<matplotlib.figure.Figure at 0x7f6c53f476d0>\n"},{"type":"IMG","data":"\n"}]},"apps":[],"jobName":"paragraph_1592310140274_-1602504597","id":"20200616-122220_784880698","dateCreated":"2020-06-16T12:22:20+0000","dateStarted":"2020-06-16T13:10:38+0000","dateFinished":"2020-06-16T13:11:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:197"},{"text":"%python\nplt = data.plot.scatter(x='Horizontal_Distance_To_Roadways',\n                      y='Elevation',\n                      c='Cover_Type',\n                      colormap='viridis')\nz.show(plt)","user":"anonymous","dateUpdated":"2020-06-16T13:12:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"IMG","data":"\n\n"},{"type":"TEXT","data":"<matplotlib.figure.Figure at 0x7f6c28a344d0>"}]},"apps":[],"jobName":"paragraph_1592311396874_475355324","id":"20200616-124316_658512916","dateCreated":"2020-06-16T12:43:16+0000","dateStarted":"2020-06-16T13:10:40+0000","dateFinished":"2020-06-16T13:11:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:198"},{"text":"%python\nplt = data.plot.scatter(x='Horizontal_Distance_To_Fire_Points',\n                      y='Elevation',\n                      c='Cover_Type',\n                      colormap='viridis')\nz.show(plt)","user":"anonymous","dateUpdated":"2020-06-16T13:12:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"IMG","data":"\n\n"},{"type":"TEXT","data":"<matplotlib.figure.Figure at 0x7f6c53c943d0>"}]},"apps":[],"jobName":"paragraph_1592312611080_-1269762840","id":"20200616-130331_1824029144","dateCreated":"2020-06-16T13:03:31+0000","dateStarted":"2020-06-16T13:12:16+0000","dateFinished":"2020-06-16T13:12:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:199"},{"text":"%python\n","user":"anonymous","dateUpdated":"2020-06-16T13:12:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592313136781_310476336","id":"20200616-131216_1468505118","dateCreated":"2020-06-16T13:12:16+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:200"}],"name":"BDA-Predicting-Forest-Cover-with-Decision-Trees","id":"2FAJEZTXA","noteParams":{},"noteForms":{},"angularObjects":{"python:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}